[
    {
        "specs": {},
        "ids": {},
        "original": [
            "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0"
        ],
        "spliced": [
            "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.0.1"
        ],
        "paths": {},
        "predictions": {
            "symbols": [
                {
                    "splice_type": "different_lib",
                    "original_lib": "libnetcdf.so.19.0.0",
                    "spliced_lib": "libnetcdf.so.19.0.1",
                    "is_stripped_original": false,
                    "is_stripped_splice": false,
                    "command": "missing-previously-found-symbols",
                    "message": [
                        "NC_set_rcfile",
                        "oc_data_free",
                        "ncrc_globalstate",
                        "H5Literate",
                        "__strncat_chk",
                        "strncat"
                    ],
                    "prediction": false,
                    "seconds": 0.0005087852478027344
                },
                {
                    "splice_type": "different_lib",
                    "original_lib": "libnetcdf.so.19.0.0",
                    "spliced_lib": "libnetcdf.so.19.0.1",
                    "is_stripped_original": false,
                    "is_stripped_splice": false,
                    "command": "missing-previously-found-exports",
                    "message": [
                        "oc_data_free",
                        "ncrc_globalstate",
                        "NC_set_rcfile"
                    ],
                    "prediction": false,
                    "seconds": 0.025938749313354492
                }
            ],
            "libabigail": [
                {
                    "message": "Functions changes summary: 2 Removed, 5 Changed (27 filtered out), 212 Added functions\nVariables changes summary: 1 Removed, 0 Changed, 3 Added variables\nFunction symbols changes summary: 0 Removed, 0 Added function symbol not referenced by debug info\nVariable symbols changes summary: 0 Removed, 1 Added variable symbol not referenced by debug info\n\n2 Removed functions:\n\n  [D] 'function int NC_set_rcfile(const char*)'    {NC_set_rcfile}\n  [D] 'function OCerror oc_data_free(OCobject, OCobject)'    {oc_data_free}\n\n212 Added functions:\n\n  [A] 'function int NC4_hdf5_find_missing_filter(NC_VAR_INFO_T*, unsigned int*)'    {NC4_hdf5_find_missing_filter}\n  [A] 'function void NCD4_attachraw(NCD4meta*, size_t, void*)'    {NCD4_attachraw}\n  [A] 'function void NCD4_reporterror(NCD4INFO*)'    {NCD4_reporterror}\n  [A] 'function int NCD4_seterrormessage(NCD4meta*, size_t, char*)'    {NCD4_seterrormessage}\n  [A] 'function int NCJaddstring(NCjson*, int, const char*)'    {NCJaddstring}\n  [A] 'function int NCJappend(NCjson*, NCjson*)'    {NCJappend}\n  [A] 'function int NCJclone(const NCjson*, NCjson**)'    {NCJclone}\n  [A] 'function int NCJcvt(const NCjson*, int, NCJconst*)'    {NCJcvt}\n  [A] 'function int NCJdictget(const NCjson*, const char*, NCjson**)'    {NCJdictget}\n  [A] 'function void NCJdump(const NCjson*, unsigned int, FILE*)'    {NCJdump}\n  [A] 'function int NCJinsert(NCjson*, char*, NCjson*)'    {NCJinsert}\n  [A] 'function int NCJnew(int, NCjson**)'    {NCJnew}\n  [A] 'function int NCJnewstring(int, const char*, NCjson**)'    {NCJnewstring}\n  [A] 'function int NCJnewstringn(int, size_t, const char*, NCjson**)'    {NCJnewstringn}\n  [A] 'function int NCJparse(const char*, unsigned int, NCjson**)'    {NCJparse}\n  [A] 'function void NCJreclaim(NCjson*)'    {NCJreclaim}\n  [A] 'function int NCJunparse(const NCjson*, unsigned int, char**)'    {NCJunparse}\n  [A] 'function int NCZ__enddef(int, size_t, size_t, size_t, size_t)'    {NCZ__enddef}\n  [A] 'function int NCZ_abort(int)'    {NCZ_abort}\n  [A] 'function int NCZ_addfilter(NC_VAR_INFO_T*, unsigned int, size_t, const unsigned int*)'    {NCZ_addfilter}\n  [A] 'function int NCZ_adjust_var_cache(NC_GRP_INFO_T*, NC_VAR_INFO_T*)'    {NCZ_adjust_var_cache}\n  [A] 'function int NCZ_buildchunkkey(size_t, const size64_t*, char, char**)'    {NCZ_buildchunkkey}\n  [A] 'function int NCZ_buildchunkpath(NCZChunkCache*, const size64_t*, ChunkKey*)'    {NCZ_buildchunkpath}\n  [A] 'function size64_t NCZ_cache_entrysize(NCZChunkCache*)'    {NCZ_cache_entrysize}\n  [A] 'function size64_t NCZ_cache_size(NCZChunkCache*)'    {NCZ_cache_size}\n  [A] 'function int NCZ_chunkindexodom(int, const NCZChunkRange*, size64_t*, NCZOdometer**)'    {NCZ_chunkindexodom}\n  [A] 'function char* NCZ_chunkpath(ChunkKey, char)'    {NCZ_chunkpath}\n  [A] 'function int NCZ_clear_provenance(NC4_Provenance*)'    {NCZ_clear_provenance}\n  [A] 'function void NCZ_clearcommon(Common*)'    {NCZ_clearcommon}\n  [A] 'function void NCZ_clearsliceprojections(int, NCZSliceProjections*)'    {NCZ_clearsliceprojections}\n  [A] 'function char** NCZ_clonestringvec(size_t, const char**)'    {NCZ_clonestringvec}\n  [A] 'function int NCZ_close(int, void*)'    {NCZ_close}\n  [A] 'function int NCZ_comma_parse(const char*, NClist*)'    {NCZ_comma_parse}\n  [A] 'function int NCZ_compute_all_slice_projections(Common*, const NCZSlice*, const NCZChunkRange*, NCZSliceProjections*)'    {NCZ_compute_all_slice_projections}\n  [A] 'function int NCZ_compute_chunk_ranges(int, const NCZSlice*, const size64_t*, NCZChunkRange*)'    {NCZ_compute_chunk_ranges}\n  [A] 'function int NCZ_compute_per_slice_projections(Common*, int, const NCZSlice*, const NCZChunkRange*, NCZSliceProjections*)'    {NCZ_compute_per_slice_projections}\n  [A] 'function int NCZ_compute_projections(Common*, int, size64_t, const NCZSlice*, size_t, NCZProjection*)'    {NCZ_compute_projections}\n  [A] 'function size64_t NCZ_computelinearoffset(size_t, const size64_t*, const size64_t*)'    {NCZ_computelinearoffset}\n  [A] 'function int NCZ_convert1(NCjson*, nc_type, unsigned char*)'    {NCZ_convert1}\n  [A] 'function int NCZ_create(const char*, int, size_t, int, size_t*, void*, const NC_Dispatch*, int)'    {NCZ_create}\n  [A] 'function int NCZ_create_chunk_cache(NC_VAR_INFO_T*, size64_t, char, NCZChunkCache**)'    {NCZ_create_chunk_cache}\n  [A] 'function int NCZ_create_fill_chunk(size64_t, size_t, void*, void**)'    {NCZ_create_fill_chunk}\n  [A] 'function int NCZ_def_dim(int, const char*, size_t, int*)'    {NCZ_def_dim}\n  [A] 'function int NCZ_def_grp(int, const char*, int*)'    {NCZ_def_grp}\n  [A] 'function int NCZ_def_var(int, const char*, nc_type, int, const int*, int*)'    {NCZ_def_var}\n  [A] 'function int NCZ_def_var_chunking(int, int, int, const size_t*)'    {NCZ_def_var_chunking}\n  [A] 'function int NCZ_def_var_deflate(int, int, int, int, int)'    {NCZ_def_var_deflate}\n  [A] 'function int NCZ_def_var_endian(int, int, int)'    {NCZ_def_var_endian}\n  [A] 'function int NCZ_def_var_fill(int, int, int, void*)'    {NCZ_def_var_fill}\n  [A] 'function int NCZ_def_var_filter(int, int, unsigned int, size_t, const unsigned int*)'    {NCZ_def_var_filter}\n  [A] 'function int NCZ_def_var_fletcher32(int, int, int)'    {NCZ_def_var_fletcher32}\n  [A] 'function int NCZ_del_att(int, int, const char*)'    {NCZ_del_att}\n  [A] 'function int NCZ_dimkey(const NC_DIM_INFO_T*, char**)'    {NCZ_dimkey}\n  [A] 'function int NCZ_downloadjson(NCZMAP*, const char*, NCjson**)'    {NCZ_downloadjson}\n  [A] 'function int NCZ_filter_freelist(NC_VAR_INFO_T*)'    {NCZ_filter_freelist}\n  [A] 'function int NCZ_filter_lookup(NC_VAR_INFO_T*, unsigned int, NCZ_Filter**)'    {NCZ_filter_lookup}\n  [A] 'function int NCZ_filter_remove(NC_VAR_INFO_T*, unsigned int)'    {NCZ_filter_remove}\n  [A] 'function int NCZ_finalize()'    {NCZ_finalize}\n  [A] 'function int NCZ_finalize_internal()'    {NCZ_finalize_internal}\n  [A] 'function int NCZ_flush_chunk_cache(NCZChunkCache*)'    {NCZ_flush_chunk_cache}\n  [A] 'function void NCZ_free_chunk_cache(NCZChunkCache*)'    {NCZ_free_chunk_cache}\n  [A] 'function void NCZ_freeenvv(int, char**)'    {NCZ_freeenvv}\n  [A] 'function void NCZ_freestringvec(size_t, char**)'    {NCZ_freestringvec}\n  [A] 'function int NCZ_get_att(int, int, const char*, void*, nc_type)'    {NCZ_get_att}\n  [A] 'function int NCZ_get_libversion(unsigned long int*, unsigned long int*, unsigned long int*)'    {NCZ_get_libversion}\n  [A] 'function int NCZ_get_superblock(NC_FILE_INFO_T*, int*)'    {NCZ_get_superblock}\n  [A] 'function int NCZ_get_vara(int, int, const size_t*, const size_t*, void*, int)'    {NCZ_get_vara}\n  [A] 'function int NCZ_get_vars(int, int, const size_t*, const size_t*, const ptrdiff_t*, void*, nc_type)'    {NCZ_get_vars}\n  [A] 'function int NCZ_grpkey(const NC_GRP_INFO_T*, char**)'    {NCZ_grpkey}\n  [A] 'function int NCZ_grpname_full(int, char**)'    {NCZ_grpname_full}\n  [A] 'function int NCZ_initialize()'    {NCZ_initialize}\n  [A] 'function int NCZ_initialize_internal()'    {NCZ_initialize_internal}\n  [A] 'function int NCZ_inq(int, int*, int*, int*, int*)'    {NCZ_inq}\n  [A] 'function int NCZ_inq_att(int, int, const char*, nc_type*, size_t*)'    {NCZ_inq_att}\n  [A] 'function int NCZ_inq_attid(int, int, const char*, int*)'    {NCZ_inq_attid}\n  [A] 'function int NCZ_inq_attname(int, int, int, char*)'    {NCZ_inq_attname}\n  [A] 'function int NCZ_inq_dim(int, int, char*, size_t*)'    {NCZ_inq_dim}\n  [A] 'function int NCZ_inq_format_extended(int, int*, int*)'    {NCZ_inq_format_extended}\n  [A] 'function int NCZ_inq_type_equal(int, nc_type, int, nc_type, int*)'    {NCZ_inq_type_equal}\n  [A] 'function int NCZ_inq_typeid(int, const char*, nc_type*)'    {NCZ_inq_typeid}\n  [A] 'function int NCZ_inq_typeids(int, int*, int*)'    {NCZ_inq_typeids}\n  [A] 'function int NCZ_inq_unlimdims(int, int*, int*)'    {NCZ_inq_unlimdims}\n  [A] 'function int NCZ_inq_var_all(int, int, char*, nc_type*, int*, int*, int*, int*, int*, int*, int*, int*, size_t*, int*, void*, int*, unsigned int*, size_t*, unsigned int*)'    {NCZ_inq_var_all}\n  [A] 'function int NCZ_inq_var_filter_ids(int, int, size_t*, unsigned int*)'    {NCZ_inq_var_filter_ids}\n  [A] 'function int NCZ_inq_var_filter_info(int, int, unsigned int, size_t*, unsigned int*)'    {NCZ_inq_var_filter_info}\n  [A] 'function int NCZ_isLittleEndian()'    {NCZ_isLittleEndian}\n  [A] 'function int NCZ_ischunkname(const char*, char)'    {NCZ_ischunkname}\n  [A] 'function int NCZ_isnetcdf4(NC_FILE_INFO*)'    {NCZ_isnetcdf4}\n  [A] 'function int NCZ_new_provenance(NC_FILE_INFO_T*)'    {NCZ_new_provenance}\n  [A] 'function int NCZ_open(const char*, int, int, size_t*, void*, const NC_Dispatch*, int)'    {NCZ_open}\n  [A] 'function int NCZ_projectslices(size64_t*, size64_t*, NCZSlice*, Common*, NCZOdometer**)'    {NCZ_projectslices}\n  [A] 'function int NCZ_provenance_finalize()'    {NCZ_provenance_finalize}\n  [A] 'function int NCZ_provenance_init()'    {NCZ_provenance_init}\n  [A] 'function int NCZ_put_att(int, int, const char*, nc_type, size_t, void*, nc_type)'    {NCZ_put_att}\n  [A] 'function int NCZ_put_vara(int, int, const size_t*, const size_t*, void*, int)'    {NCZ_put_vara}\n  [A] 'function int NCZ_put_vars(int, int, const size_t*, const size_t*, const ptrdiff_t*, void*, nc_type)'    {NCZ_put_vars}\n  [A] 'function int NCZ_read_cache_chunk(NCZChunkCache*, const size64_t*, void**)'    {NCZ_read_cache_chunk}\n  [A] 'function int NCZ_read_chunk(int, int, size64_t*, void*)'    {NCZ_read_chunk}\n  [A] 'function int NCZ_read_provenance(NC_FILE_INFO_T*, const char*, const char*)'    {NCZ_read_provenance}\n  [A] 'function int NCZ_readarray(NCZMAP*, const char*, NCjson**)'    {NCZ_readarray}\n  [A] 'function int NCZ_readdict(NCZMAP*, const char*, NCjson**)'    {NCZ_readdict}\n  [A] 'function int NCZ_redef(int)'    {NCZ_redef}\n  [A] 'function int NCZ_rename_att(int, int, const char*, const char*)'    {NCZ_rename_att}\n  [A] 'function int NCZ_rename_dim(int, int, const char*)'    {NCZ_rename_dim}\n  [A] 'function int NCZ_rename_grp(int, const char*)'    {NCZ_rename_grp}\n  [A] 'function int NCZ_rename_var(int, int, const char*)'    {NCZ_rename_var}\n  [A] 'function int NCZ_s3clear(ZS3INFO*)'    {NCZ_s3clear}\n  [A] 'function int NCZ_s3urlprocess(NCURI*, ZS3INFO*)'    {NCZ_s3urlprocess}\n  [A] 'function int NCZ_set_fill(int, int, int*)'    {NCZ_set_fill}\n  [A] 'function int NCZ_set_var_chunk_cache(int, int, size_t, size_t, float)'    {NCZ_set_var_chunk_cache}\n  [A] 'function int NCZ_stringconvert(nc_type, size_t, void*, NCjson**)'    {NCZ_stringconvert}\n  [A] 'function int NCZ_stringconvert1(nc_type, unsigned char*, char**)'    {NCZ_stringconvert1}\n  [A] 'function int NCZ_subobjects(NCZMAP*, const char*, const char*, char, NClist*)'    {NCZ_subobjects}\n  [A] 'function int NCZ_swapatomicdata(size_t, void*, int)'    {NCZ_swapatomicdata}\n  [A] 'function int NCZ_sync(int)'    {NCZ_sync}\n  [A] 'function int NCZ_transfer(Common*, NCZSlice*)'    {NCZ_transfer}\n  [A] 'function int NCZ_transferscalar(Common*)'    {NCZ_transferscalar}\n  [A] 'function int NCZ_transferslice(NC_VAR_INFO_T*, int, size64_t*, size64_t*, size64_t*, void*, nc_type)'    {NCZ_transferslice}\n  [A] 'function int NCZ_uploadjson(NCZMAP*, const char*, NCjson*)'    {NCZ_uploadjson}\n  [A] 'function int NCZ_varkey(const NC_VAR_INFO_T*, char**)'    {NCZ_varkey}\n  [A] 'function int NCZ_write_cache_chunk(NCZChunkCache*, const size64_t*, void**)'    {NCZ_write_cache_chunk}\n  [A] 'function int NCZ_write_provenance(NC_FILE_INFO_T*)'    {NCZ_write_provenance}\n  [A] 'function char* NC_shellUnescape(const char*)'    {NC_shellUnescape}\n  [A] 'function int NCisnetworkpath(const char*)'    {NCisnetworkpath}\n  [A] 'function int NCpathcanonical(const char*, char**)'    {NCpathcanonical}\n  [A] 'function const char* astype(int, void*)'    {astype}\n  [A] 'function void ncrc_initialize()'    {ncrc_initialize}\n  [A] 'function int ncz_chunking_init()'    {ncz_chunking_init}\n  [A] 'function int ncz_close_file(NC_FILE_INFO_T*, int)'    {ncz_close_file}\n  [A] 'function int ncz_closeorabort(NC_FILE_INFO_T*, void*, int)'    {ncz_closeorabort}\n  [A] 'function int ncz_create_dataset(NC_FILE_INFO_T*, NC_GRP_INFO_T*, const char**)'    {ncz_create_dataset}\n  [A] 'function int ncz_create_fillvalue(NC_VAR_INFO_T*)'    {ncz_create_fillvalue}\n  [A] 'function int ncz_def_var_chunking_ints(int, int, int, int*)'    {ncz_def_var_chunking_ints}\n  [A] 'function int ncz_dtype2typeinfo(const char*, nc_type*, int*)'    {ncz_dtype2typeinfo}\n  [A] 'function int ncz_enddef_netcdf4_file(NC_FILE_INFO_T*)'    {ncz_enddef_netcdf4_file}\n  [A] 'function int ncz_fill_value_sort(nc_type, int*)'    {ncz_fill_value_sort}\n  [A] 'function int ncz_find_default_chunksizes2(NC_GRP_INFO_T*, NC_VAR_INFO_T*)'    {ncz_find_default_chunksizes2}\n  [A] 'function int ncz_find_dim_len(NC_GRP_INFO_T*, int, size_t**)'    {ncz_find_dim_len}\n  [A] 'function int ncz_find_grp_file_var(int, int, NC_FILE_INFO_T**, NC_GRP_INFO_T**, NC_VAR_INFO_T**)'    {ncz_find_grp_file_var}\n  [A] 'function int ncz_find_grp_var_att(int, int, const char*, int, int, char*, NC_FILE_INFO_T**, NC_GRP_INFO_T**, NC_VAR_INFO_T**, NC_ATT_INFO_T**)'    {ncz_find_grp_var_att}\n  [A] 'function int ncz_get_att_special(NC_FILE_INFO_T*, const char*, nc_type*, nc_type, size_t*, int*, void*)'    {ncz_get_att_special}\n  [A] 'function int ncz_get_fill_value(NC_FILE_INFO_T*, NC_VAR_INFO_T*, void**)'    {ncz_get_fill_value}\n  [A] 'function int ncz_get_var_meta(NC_FILE_INFO_T*, NC_VAR_INFO_T*)'    {ncz_get_var_meta}\n  [A] 'function int ncz_getattlist(NC_GRP_INFO_T*, int, NC_VAR_INFO_T**, NCindex**)'    {ncz_getattlist}\n  [A] 'function int ncz_gettype(NC_FILE_INFO_T*, NC_GRP_INFO_T*, int, NC_TYPE_INFO_T**)'    {ncz_gettype}\n  [A] 'function int ncz_makeattr(NC_OBJ*, NCindex*, const char*, nc_type, size_t, void*, NC_ATT_INFO_T**)'    {ncz_makeattr}\n  [A] 'function int ncz_nctype2typeinfo(const char*, nc_type*)'    {ncz_nctype2typeinfo}\n  [A] 'function int ncz_open_dataset(NC_FILE_INFO_T*, const char**)'    {ncz_open_dataset}\n  [A] 'function int ncz_put_att(NC_GRP_INFO_T*, int, const char*, nc_type, size_t, void*, nc_type, int)'    {ncz_put_att}\n  [A] 'function int ncz_read_atts(NC_FILE_INFO_T*, NC_OBJ*)'    {ncz_read_atts}\n  [A] 'function int ncz_read_file(NC_FILE_INFO_T*)'    {ncz_read_file}\n  [A] 'function int ncz_read_superblock(NC_FILE_INFO_T*, char**, char**)'    {ncz_read_superblock}\n  [A] 'function int ncz_splitkey(const char*, NClist*)'    {ncz_splitkey}\n  [A] 'function int ncz_sync_atts(NC_FILE_INFO_T*, NC_OBJ*, NCindex*)'    {ncz_sync_atts}\n  [A] 'function int ncz_sync_file(NC_FILE_INFO_T*, int)'    {ncz_sync_file}\n  [A] 'function int ncz_sync_grp(NC_FILE_INFO_T*, NC_GRP_INFO_T*)'    {ncz_sync_grp}\n  [A] 'function int ncz_write_var(NC_VAR_INFO_T*)'    {ncz_write_var}\n  [A] 'function int ncz_zarr_type_name(nc_type, int, const char**)'    {ncz_zarr_type_name}\n  [A] 'function int nczm_appendn(char**, int, ...)'    {nczm_appendn}\n  [A] 'function int nczm_basename(const char*, char**)'    {nczm_basename}\n  [A] 'function int nczm_canonicalpath(const char*, char**)'    {nczm_canonicalpath}\n  [A] 'function int nczm_clear(NCZMAP*)'    {nczm_clear}\n  [A] 'function int nczm_concat(const char*, const char*, char**)'    {nczm_concat}\n  [A] 'function int nczm_divide_at(const char*, int, char**, char**)'    {nczm_divide_at}\n  [A] 'function int nczm_isabsolutepath(const char*)'    {nczm_isabsolutepath}\n  [A] 'function int nczm_join(NClist*, char**)'    {nczm_join}\n  [A] 'function int nczm_lastsegment(const char*, char**)'    {nczm_lastsegment}\n  [A] 'function int nczm_localize(const char*, char**, int)'    {nczm_localize}\n  [A] 'function int nczm_segment1(const char*, char**)'    {nczm_segment1}\n  [A] 'function void nczm_sortenvv(int, char**)'    {nczm_sortenvv}\n  [A] 'function void nczm_sortlist(NClist*)'    {nczm_sortlist}\n  [A] 'function int nczm_split(const char*, NClist*)'    {nczm_split}\n  [A] 'function int nczm_split_delim(const char*, char, NClist*)'    {nczm_split_delim}\n  [A] 'function int nczmap_close(NCZMAP*, int)'    {nczmap_close}\n  [A] 'function int nczmap_create(NCZM_IMPL, const char*, int, size64_t, void*, NCZMAP**)'    {nczmap_create}\n  [A] 'function int nczmap_exists(NCZMAP*, const char*)'    {nczmap_exists}\n  [A] 'function NCZM_FEATURES nczmap_features(NCZM_IMPL)'    {nczmap_features}\n  [A] 'function int nczmap_len(NCZMAP*, const char*, size64_t*)'    {nczmap_len}\n  [A] 'function int nczmap_open(NCZM_IMPL, const char*, int, size64_t, void*, NCZMAP**)'    {nczmap_open}\n  [A] 'function int nczmap_read(NCZMAP*, const char*, size64_t, size64_t, void*)'    {nczmap_read}\n  [A] 'function int nczmap_search(NCZMAP*, const char*, NClist*)'    {nczmap_search}\n  [A] 'function int nczmap_write(NCZMAP*, const char*, size64_t, size64_t, void*)'    {nczmap_write}\n  [A] 'function size64_t nczodom_avail(const NCZOdometer*)'    {nczodom_avail}\n  [A] 'function void nczodom_free(NCZOdometer*)'    {nczodom_free}\n  [A] 'function NCZOdometer* nczodom_fromslices(int, const NCZSlice*)'    {nczodom_fromslices}\n  [A] 'function size64_t* nczodom_indices(const NCZOdometer*)'    {nczodom_indices}\n  [A] 'function int nczodom_more(const NCZOdometer*)'    {nczodom_more}\n  [A] 'function NCZOdometer* nczodom_new(int, const size64_t*, const size64_t*, const size64_t*, const size64_t*)'    {nczodom_new}\n  [A] 'function void nczodom_next(NCZOdometer*)'    {nczodom_next}\n  [A] 'function size64_t nczodom_offset(const NCZOdometer*)'    {nczodom_offset}\n  [A] 'function void nczodom_reset(NCZOdometer*)'    {nczodom_reset}\n  [A] 'function void nczodom_skipavail(NCZOdometer*)'    {nczodom_skipavail}\n  [A] 'function char* nczprint_allsliceprojections(int, const NCZSliceProjections*)'    {nczprint_allsliceprojections}\n  [A] 'function char* nczprint_chunkrange(const NCZChunkRange)'    {nczprint_chunkrange}\n  [A] 'function char* nczprint_envv(const char**)'    {nczprint_envv}\n  [A] 'function char* nczprint_idvector(size_t, const int*)'    {nczprint_idvector}\n  [A] 'function char* nczprint_odom(const NCZOdometer*)'    {nczprint_odom}\n  [A] 'function char* nczprint_projection(const NCZProjection)'    {nczprint_projection}\n  [A] 'function char* nczprint_projectionx(const NCZProjection, int)'    {nczprint_projectionx}\n  [A] 'function void nczprint_reclaim()'    {nczprint_reclaim}\n  [A] 'function char* nczprint_sizevector(size_t, const size_t*)'    {nczprint_sizevector}\n  [A] 'function char* nczprint_slab(int, const NCZSlice*)'    {nczprint_slab}\n  [A] 'function char* nczprint_slice(const NCZSlice)'    {nczprint_slice}\n  [A] 'function char* nczprint_sliceprojections(const NCZSliceProjections)'    {nczprint_sliceprojections}\n  [A] 'function char* nczprint_sliceprojectionsx(const NCZSliceProjections, int)'    {nczprint_sliceprojectionsx}\n  [A] 'function char* nczprint_slices(int, const NCZSlice*)'    {nczprint_slices}\n  [A] 'function char* nczprint_slicesx(int, const NCZSlice*, int)'    {nczprint_slicesx}\n  [A] 'function char* nczprint_slicex(const NCZSlice, int)'    {nczprint_slicex}\n  [A] 'function char* nczprint_vector(size_t, const size64_t*)'    {nczprint_vector}\n  [A] 'function void nczprintprovenance(NC4_Provenance*)'    {nczprintprovenance}\n  [A] 'function void zdumpcommon(const Common*)'    {zdumpcommon}\n  [A] 'function int zfilesearch(NCZMAP*, const char*, NClist*)'    {zfilesearch}\n\n5 functions with some indirect sub-type change:\n\n  [C] 'function int NC4_hdf5_addfilter(NC_VAR_INFO_T*, unsigned int, size_t, const unsigned int*)' at hdf5filter.c:251:1 has some indirect sub-type changes:\n    parameter 5 of type 'int' was added\n\n  [C] 'function void NCD4_applyclientparamcontrols(NCD4INFO*)' at d4file.c:424:1 has some indirect sub-type changes:\n    parameter 1 of type 'NCD4INFO*' has sub-type changes:\n      in pointed to type 'typedef NCD4INFO' at ncd4types.h:42:1:\n        underlying type 'struct NCD4INFO' at ncd4types.h:321:1 changed:\n          type size hasn't changed\n          1 data member change:\n            type of 'struct {int realfile; char* filename; int nc4id; NCD4meta* metadata;} substrate' changed:\n              type size hasn't changed\n              1 data member change:\n                type of 'NCD4meta* metadata' changed:\n                  in pointed to type 'typedef NCD4meta' at ncd4types.h:48:1:\n                    underlying type 'struct NCD4meta' at ncd4types.h:261:1 changed:\n                      type size hasn't changed\n                      1 data member changes (1 filtered):\n                        type of 'NCD4serial serial' changed:\n                          underlying type 'struct NCD4serial' at ncd4types.h:246:1 changed:\n                            type size hasn't changed\n                            1 data member insertion:\n                              'int httpcode', at offset 384 (in bits) at ncd4types.h:253:1\n                            3 data member changes:\n                              'int hostlittleendian' offset changed from 384 to 416 (in bits) (by +32 bits)\n                              'int remotelittleendian' offset changed from 416 to 448 (in bits) (by +32 bits)\n                              'int checksumhack' offset changed from 448 to 480 (in bits) (by +32 bits)\n\n  [C] 'function int NCD4_fetchurl(CURL*, const char*, NCbytes*, long int*)' at d4http.c:90:1 has some indirect sub-type changes:\n    parameter 5 of type 'int*' was added\n\n  [C] 'function NCD4meta* NCD4_newmeta(NCD4INFO*, size_t, void*)' at d4meta.c:99:1 has some indirect sub-type changes:\n    parameter 2 of type 'typedef size_t' was removed\n    parameter 3 of type 'void*' was removed\n\n  [C] 'function NCRCglobalstate* ncrc_getglobalstate()' at drc.c:76:1 has some indirect sub-type changes:\n    return type changed:\n      in pointed to type 'typedef NCRCglobalstate' at ncrc.h:48:1:\n        underlying type 'struct NCRCglobalstate' at ncrc.h:34:1 changed:\n          type size changed from 384 to 512 (in bits)\n          2 data member insertions:\n            'char* cwd', at offset 192 (in bits) at ncrc.h:43:1\n            'GlobalZarr zarr', at offset 448 (in bits) at ncrc.h:47:1\n          1 data member change:\n            'NCRCinfo rcinfo' offset changed from 192 to 256 (in bits) (by +64 bits)\n\n1 Removed variable:\n\n  [D] 'NCRCglobalstate ncrc_globalstate'    {ncrc_globalstate}\n\n3 Added variables:\n\n  [A] 'const NC_Dispatch* NCZ_dispatch_table'    {NCZ_dispatch_table}\n  [A] 'int ncz_initialized'    {ncz_initialized}\n  [A] 'NCZMAP_DS_API zmap_file'    {zmap_file}\n\n1 Added variable symbol not referenced by debug info:\n\n  [A] zutest\n\n",
                    "return_code": 12,
                    "seconds": 0.6211695671081543,
                    "command": "/usr/local/bin/abidiff --debug-info-dir1 /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib/debug --debug-info-dir2 /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib/debug  /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0 /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.0.1",
                    "spliced_lib": "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.0.1",
                    "original_lib": "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0",
                    "prediction": false,
                    "splice_type": "different_lib"
                }
            ],
            "abi-laboratory": [
                {
                    "message": "old: /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0\nnew: /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.0.1\nreport: /tmp/cache/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0-abi-laboratory-libnetcdf-so-19-0-0-libnetcdf-so-19-0-1.html\n*** stack smashing detected ***: terminated\n",
                    "return_code": 134,
                    "seconds": 0.19137883186340332,
                    "command": "/bin/bash /usr/bin/run_abi_laboratory.sh /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0 /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.0.1 libnetcdf-so-19-0-0-libnetcdf-so-19-0-1 /tmp/cache/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0-abi-laboratory-libnetcdf-so-19-0-0-libnetcdf-so-19-0-1.html",
                    "spliced_lib": "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.0.1",
                    "original_lib": "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0",
                    "prediction": false,
                    "splice_type": "different_lib"
                }
            ]
        },
        "stats": {
            "sizes_bytes": {
                "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0": 1399784,
                "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.0.1": 1537496
            }
        },
        "experiment": "usr/lib64/libnetcdf-fedora-libs-35-fedora-libs-36",
        "result": "diff-libraries-present",
        "success": true,
        "splice": "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.0.1",
        "package": "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0",
        "different_libs": true
    }
]