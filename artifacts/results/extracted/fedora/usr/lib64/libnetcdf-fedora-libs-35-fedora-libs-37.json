[
    {
        "specs": {},
        "ids": {},
        "original": [
            "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0"
        ],
        "spliced": [
            "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.1.0"
        ],
        "paths": {},
        "predictions": {
            "symbols": [
                {
                    "splice_type": "different_lib",
                    "original_lib": "libnetcdf.so.19.0.0",
                    "spliced_lib": "libnetcdf.so.19.1.0",
                    "is_stripped_original": false,
                    "is_stripped_splice": false,
                    "command": "missing-previously-found-symbols",
                    "message": [
                        "ezxml_proc_inst",
                        "ezxml_idx",
                        "ezxml_ent_ok",
                        "ezxml_set_attr",
                        "ezxml_str2utf8",
                        "ezxml_free_attr",
                        "ezxml_child",
                        "strspn",
                        "ezxml_new",
                        "ncrc_freeglobalstate",
                        "strcspn",
                        "ezxml_set_flag",
                        "ezxml_toxml_r",
                        "ezxml_decode",
                        "strncat",
                        "__vsnprintf_chk",
                        "NC_set_rcfile",
                        "ezxml_internal_dtd",
                        "ezxml_all_attr",
                        "ezxml_pi",
                        "ezxml_ampencode",
                        "ncrc_getglobalstate",
                        "ezxml_err",
                        "ezxml_error",
                        "nc4_chunk_cache_preemption",
                        "ezxml_attr",
                        "NC_rcload",
                        "ezxml_get",
                        "ezxml_add_child",
                        "NCD4_readfile",
                        "ezxml_cut",
                        "__strncat_chk",
                        "nc4_chunk_cache_size",
                        "ezxml_free",
                        "ezxml_parse_str",
                        "ncrc_globalstate",
                        "ezxml_close_tag",
                        "ezxml_set_txt",
                        "ezxml_toxml",
                        "ezxml_open_tag",
                        "ezxml_vget",
                        "ezxml_char_content",
                        "NCD4_mktmp",
                        "H5Literate",
                        "ezxml_parse_fp",
                        "ezxml_insert",
                        "oc_data_free",
                        "nc4_chunk_cache_nelems"
                    ],
                    "prediction": false,
                    "seconds": 0.0005805492401123047
                },
                {
                    "splice_type": "different_lib",
                    "original_lib": "libnetcdf.so.19.0.0",
                    "spliced_lib": "libnetcdf.so.19.1.0",
                    "is_stripped_original": false,
                    "is_stripped_splice": false,
                    "command": "missing-previously-found-exports",
                    "message": [
                        "ezxml_toxml_r",
                        "ezxml_pi",
                        "ezxml_ent_ok",
                        "ezxml_set_attr",
                        "ezxml_all_attr",
                        "ezxml_close_tag",
                        "nc4_chunk_cache_size",
                        "ezxml_get",
                        "ezxml_attr",
                        "ezxml_child",
                        "NCD4_readfile",
                        "ezxml_idx",
                        "ezxml_parse_fp",
                        "ncrc_freeglobalstate",
                        "ezxml_set_flag",
                        "ezxml_parse_str",
                        "ezxml_insert",
                        "ezxml_cut",
                        "nc4_chunk_cache_preemption",
                        "ezxml_err",
                        "ezxml_char_content",
                        "ezxml_add_child",
                        "ezxml_str2utf8",
                        "ezxml_new",
                        "ezxml_toxml",
                        "NC_rcload",
                        "ezxml_open_tag",
                        "ncrc_getglobalstate",
                        "NCD4_mktmp",
                        "ezxml_proc_inst",
                        "nc4_chunk_cache_nelems",
                        "ezxml_ampencode",
                        "ezxml_free",
                        "ezxml_internal_dtd",
                        "oc_data_free",
                        "ezxml_free_attr",
                        "ezxml_error",
                        "ezxml_set_txt",
                        "ezxml_vget",
                        "ncrc_globalstate",
                        "NC_set_rcfile",
                        "ezxml_decode"
                    ],
                    "prediction": false,
                    "seconds": 0.031612396240234375
                }
            ],
            "libabigail": [
                {
                    "message": "Functions changes summary: 38 Removed, 22 Changed (259 filtered out), 323 Added functions\nVariables changes summary: 4 Removed, 0 Changed (7 filtered out), 5 Added variables\nFunction symbols changes summary: 0 Removed, 0 Added function symbol not referenced by debug info\nVariable symbols changes summary: 0 Removed, 2 Added variable symbols not referenced by debug info\n\n38 Removed functions:\n\n  [D] 'function int NCD4_mktmp(const char*, char**)'    {NCD4_mktmp}\n  [D] 'function int NCD4_readfile(const char*, NCbytes*)'    {NCD4_readfile}\n  [D] 'function int NC_rcload()'    {NC_rcload}\n  [D] 'function int NC_set_rcfile(const char*)'    {NC_set_rcfile}\n  [D] 'function ezxml_t ezxml_add_child(ezxml_t, const char*, size_t)'    {ezxml_add_child}\n  [D] 'function const char** ezxml_all_attr(ezxml_t, int*)'    {ezxml_all_attr}\n  [D] 'function char* ezxml_ampencode(const char*, size_t, char**, size_t*, size_t*, short int)'    {ezxml_ampencode}\n  [D] 'function const char* ezxml_attr(ezxml_t, const char*)'    {ezxml_attr}\n  [D] 'function void ezxml_char_content(ezxml_root_t, char*, size_t, char)'    {ezxml_char_content}\n  [D] 'function ezxml_t ezxml_child(ezxml_t, const char*)'    {ezxml_child}\n  [D] 'function ezxml_t ezxml_close_tag(ezxml_root_t, char*, char*)'    {ezxml_close_tag}\n  [D] 'function ezxml_t ezxml_cut(ezxml_t)'    {ezxml_cut}\n  [D] 'function char* ezxml_decode(char*, char**, char)'    {ezxml_decode}\n  [D] 'function int ezxml_ent_ok(char*, char*, char**)'    {ezxml_ent_ok}\n  [D] 'function ezxml_t ezxml_err(ezxml_root_t, char*, const char*, ...)'    {ezxml_err}\n  [D] 'function const char* ezxml_error(ezxml_t)'    {ezxml_error}\n  [D] 'function void ezxml_free(ezxml_t)'    {ezxml_free}\n  [D] 'function void ezxml_free_attr(char**)'    {ezxml_free_attr}\n  [D] 'function ezxml_t ezxml_get(ezxml_t, ...)'    {ezxml_get}\n  [D] 'function ezxml_t ezxml_idx(ezxml_t, int)'    {ezxml_idx}\n  [D] 'function ezxml_t ezxml_insert(ezxml_t, ezxml_t, size_t)'    {ezxml_insert}\n  [D] 'function short int ezxml_internal_dtd(ezxml_root_t, char*, size_t)'    {ezxml_internal_dtd}\n  [D] 'function ezxml_t ezxml_new(const char*)'    {ezxml_new}\n  [D] 'function void ezxml_open_tag(ezxml_root_t, char*, char**)'    {ezxml_open_tag}\n  [D] 'function ezxml_t ezxml_parse_fp(FILE*)'    {ezxml_parse_fp}\n  [D] 'function ezxml_t ezxml_parse_str(char*, size_t)'    {ezxml_parse_str}\n  [D] 'function const char** ezxml_pi(ezxml_t, const char*)'    {ezxml_pi}\n  [D] 'function void ezxml_proc_inst(ezxml_root_t, char*, size_t)'    {ezxml_proc_inst}\n  [D] 'function ezxml_t ezxml_set_attr(ezxml_t, const char*, const char*)'    {ezxml_set_attr}\n  [D] 'function ezxml_t ezxml_set_flag(ezxml_t, short int)'    {ezxml_set_flag}\n  [D] 'function ezxml_t ezxml_set_txt(ezxml_t, const char*)'    {ezxml_set_txt}\n  [D] 'function char* ezxml_str2utf8(char**, size_t*)'    {ezxml_str2utf8}\n  [D] 'function char* ezxml_toxml(ezxml_t)'    {ezxml_toxml}\n  [D] 'function char* ezxml_toxml_r(ezxml_t, char**, size_t*, size_t*, size_t, char***)'    {ezxml_toxml_r}\n  [D] 'function ezxml_t ezxml_vget(ezxml_t, __va_list_tag*)'    {ezxml_vget}\n  [D] 'function void ncrc_freeglobalstate()'    {ncrc_freeglobalstate}\n  [D] 'function NCRCglobalstate* ncrc_getglobalstate()'    {ncrc_getglobalstate}\n  [D] 'function OCerror oc_data_free(OCobject, OCobject)'    {oc_data_free}\n\n323 Added functions:\n\n  [A] 'function int NC4_def_var_quantize(int, int, int, int)'    {NC4_def_var_quantize}\n  [A] 'function int NC4_hdf5_filter_finalize()'    {NC4_hdf5_filter_finalize}\n  [A] 'function int NC4_hdf5_filter_initialize()'    {NC4_hdf5_filter_initialize}\n  [A] 'function int NC4_hdf5_find_missing_filter(NC_VAR_INFO_T*, unsigned int*)'    {NC4_hdf5_find_missing_filter}\n  [A] 'function int NC4_hdf5_inq_filter_avail(int, unsigned int)'    {NC4_hdf5_inq_filter_avail}\n  [A] 'function int NC4_inq_type_fixed_size(int, nc_type, int*)'    {NC4_inq_type_fixed_size}\n  [A] 'function int NC4_inq_var_quantize(int, int, int*, int*)'    {NC4_inq_var_quantize}\n  [A] 'function void NCD4_attachraw(NCD4meta*, size_t, void*)'    {NCD4_attachraw}\n  [A] 'function int NCD4_get_substrate(int)'    {NCD4_get_substrate}\n  [A] 'function void NCD4_reporterror(NCD4INFO*)'    {NCD4_reporterror}\n  [A] 'function int NCD4_seterrormessage(NCD4meta*, size_t, char*)'    {NCD4_seterrormessage}\n  [A] 'function int NCJaddstring(NCjson*, int, const char*)'    {NCJaddstring}\n  [A] 'function int NCJappend(NCjson*, NCjson*)'    {NCJappend}\n  [A] 'function int NCJclone(const NCjson*, NCjson**)'    {NCJclone}\n  [A] 'function int NCJcvt(const NCjson*, int, NCJconst*)'    {NCJcvt}\n  [A] 'function int NCJdictget(const NCjson*, const char*, NCjson**)'    {NCJdictget}\n  [A] 'function void NCJdump(const NCjson*, unsigned int, FILE*)'    {NCJdump}\n  [A] 'function int NCJinsert(NCjson*, char*, NCjson*)'    {NCJinsert}\n  [A] 'function int NCJnew(int, NCjson**)'    {NCJnew}\n  [A] 'function int NCJnewstring(int, const char*, NCjson**)'    {NCJnewstring}\n  [A] 'function int NCJnewstringn(int, size_t, const char*, NCjson**)'    {NCJnewstringn}\n  [A] 'function int NCJparse(const char*, unsigned int, NCjson**)'    {NCJparse}\n  [A] 'function int NCJparsen(size_t, const char*, unsigned int, NCjson**)'    {NCJparsen}\n  [A] 'function void NCJreclaim(NCjson*)'    {NCJreclaim}\n  [A] 'function int NCJunparse(const NCjson*, unsigned int, char**)'    {NCJunparse}\n  [A] 'function int NCZ__enddef(int, size_t, size_t, size_t, size_t)'    {NCZ__enddef}\n  [A] 'function int NCZ_abort(int)'    {NCZ_abort}\n  [A] 'function int NCZ_addfilter(NC_FILE_INFO_T*, NC_VAR_INFO_T*, unsigned int, size_t, const unsigned int*)'    {NCZ_addfilter}\n  [A] 'function int NCZ_adjust_var_cache(NC_VAR_INFO_T*)'    {NCZ_adjust_var_cache}\n  [A] 'function int NCZ_applyfilterchain(const NC_FILE_INFO_T*, NC_VAR_INFO_T*, NClist*, size_t, void*, size_t*, void**, int)'    {NCZ_applyfilterchain}\n  [A] 'function int NCZ_buildchunkkey(size_t, const size64_t*, char, char**)'    {NCZ_buildchunkkey}\n  [A] 'function int NCZ_buildchunkpath(NCZChunkCache*, const size64_t*, ChunkKey*)'    {NCZ_buildchunkpath}\n  [A] 'function size64_t NCZ_cache_entrysize(NCZChunkCache*)'    {NCZ_cache_entrysize}\n  [A] 'function size64_t NCZ_cache_size(NCZChunkCache*)'    {NCZ_cache_size}\n  [A] 'function int NCZ_chunkindexodom(int, const NCZChunkRange*, size64_t*, NCZOdometer**)'    {NCZ_chunkindexodom}\n  [A] 'function char* NCZ_chunkpath(ChunkKey)'    {NCZ_chunkpath}\n  [A] 'function int NCZ_clear_provenance(NC4_Provenance*)'    {NCZ_clear_provenance}\n  [A] 'function void NCZ_clearcommon(Common*)'    {NCZ_clearcommon}\n  [A] 'function void NCZ_clearsliceprojections(int, NCZSliceProjections*)'    {NCZ_clearsliceprojections}\n  [A] 'function char** NCZ_clonestringvec(size_t, const char**)'    {NCZ_clonestringvec}\n  [A] 'function int NCZ_close(int, void*)'    {NCZ_close}\n  [A] 'function int NCZ_codec_attr(const NC_VAR_INFO_T*, size_t*, void*)'    {NCZ_codec_attr}\n  [A] 'function int NCZ_comma_parse(const char*, NClist*)'    {NCZ_comma_parse}\n  [A] 'function int NCZ_compute_all_slice_projections(Common*, const NCZSlice*, const NCZChunkRange*, NCZSliceProjections*)'    {NCZ_compute_all_slice_projections}\n  [A] 'function int NCZ_compute_chunk_ranges(int, const NCZSlice*, const size64_t*, NCZChunkRange*)'    {NCZ_compute_chunk_ranges}\n  [A] 'function int NCZ_compute_per_slice_projections(Common*, int, const NCZSlice*, const NCZChunkRange*, NCZSliceProjections*)'    {NCZ_compute_per_slice_projections}\n  [A] 'function int NCZ_compute_projections(Common*, int, size64_t, const NCZSlice*, size_t, NCZProjection*)'    {NCZ_compute_projections}\n  [A] 'function size64_t NCZ_computelinearoffset(size_t, const size64_t*, const size64_t*)'    {NCZ_computelinearoffset}\n  [A] 'function int NCZ_convert1(NCjson*, nc_type, unsigned char*)'    {NCZ_convert1}\n  [A] 'function int NCZ_copy_fill_value(NC_VAR_INFO_T*, void**)'    {NCZ_copy_fill_value}\n  [A] 'function int NCZ_create(const char*, int, size_t, int, size_t*, void*, const NC_Dispatch*, int)'    {NCZ_create}\n  [A] 'function int NCZ_create_chunk_cache(NC_VAR_INFO_T*, size64_t, char, NCZChunkCache**)'    {NCZ_create_chunk_cache}\n  [A] 'function int NCZ_def_dim(int, const char*, size_t, int*)'    {NCZ_def_dim}\n  [A] 'function int NCZ_def_grp(int, const char*, int*)'    {NCZ_def_grp}\n  [A] 'function int NCZ_def_var(int, const char*, nc_type, int, const int*, int*)'    {NCZ_def_var}\n  [A] 'function int NCZ_def_var_chunking(int, int, int, const size_t*)'    {NCZ_def_var_chunking}\n  [A] 'function int NCZ_def_var_deflate(int, int, int, int, int)'    {NCZ_def_var_deflate}\n  [A] 'function int NCZ_def_var_endian(int, int, int)'    {NCZ_def_var_endian}\n  [A] 'function int NCZ_def_var_fill(int, int, int, void*)'    {NCZ_def_var_fill}\n  [A] 'function int NCZ_def_var_filter(int, int, unsigned int, size_t, const unsigned int*)'    {NCZ_def_var_filter}\n  [A] 'function int NCZ_def_var_fletcher32(int, int, int)'    {NCZ_def_var_fletcher32}\n  [A] 'function int NCZ_def_var_quantize(int, int, int, int)'    {NCZ_def_var_quantize}\n  [A] 'function int NCZ_del_att(int, int, const char*)'    {NCZ_del_att}\n  [A] 'function int NCZ_dimkey(const NC_DIM_INFO_T*, char**)'    {NCZ_dimkey}\n  [A] 'function int NCZ_downloadjson(NCZMAP*, const char*, NCjson**)'    {NCZ_downloadjson}\n  [A] 'function void NCZ_dumpxcacheentry(NCZChunkCache*, NCZCacheEntry*, NCbytes*)'    {NCZ_dumpxcacheentry}\n  [A] 'function int NCZ_ensure_fill_chunk(NCZChunkCache*)'    {NCZ_ensure_fill_chunk}\n  [A] 'function int NCZ_ensure_fill_value(NC_VAR_INFO_T*)'    {NCZ_ensure_fill_value}\n  [A] 'function int NCZ_ensure_quantizer(int, NC_VAR_INFO_T*)'    {NCZ_ensure_quantizer}\n  [A] 'function int NCZ_filter_build(const NC_FILE_INFO_T*, NC_VAR_INFO_T*, const NCjson*, int)'    {NCZ_filter_build}\n  [A] 'function int NCZ_filter_finalize()'    {NCZ_filter_finalize}\n  [A] 'function int NCZ_filter_freelists(NC_VAR_INFO_T*)'    {NCZ_filter_freelists}\n  [A] 'function int NCZ_filter_initialize()'    {NCZ_filter_initialize}\n  [A] 'function int NCZ_filter_jsonize(const NC_FILE_INFO_T*, const NC_VAR_INFO_T*, NCZ_Filter*, NCjson**)'    {NCZ_filter_jsonize}\n  [A] 'function int NCZ_filter_remove(NC_VAR_INFO_T*, unsigned int)'    {NCZ_filter_remove}\n  [A] 'function int NCZ_filter_setup(NC_VAR_INFO_T*)'    {NCZ_filter_setup}\n  [A] 'function int NCZ_finalize()'    {NCZ_finalize}\n  [A] 'function int NCZ_finalize_internal()'    {NCZ_finalize_internal}\n  [A] 'function int NCZ_flush_chunk_cache(NCZChunkCache*)'    {NCZ_flush_chunk_cache}\n  [A] 'function void NCZ_free_chunk_cache(NCZChunkCache*)'    {NCZ_free_chunk_cache}\n  [A] 'function void NCZ_freeenvv(int, char**)'    {NCZ_freeenvv}\n  [A] 'function void NCZ_freestringvec(size_t, char**)'    {NCZ_freestringvec}\n  [A] 'function int NCZ_get_att(int, int, const char*, void*, nc_type)'    {NCZ_get_att}\n  [A] 'function int NCZ_get_libversion(unsigned long int*, unsigned long int*, unsigned long int*)'    {NCZ_get_libversion}\n  [A] 'function int NCZ_get_superblock(NC_FILE_INFO_T*, int*)'    {NCZ_get_superblock}\n  [A] 'function int NCZ_get_vara(int, int, const size_t*, const size_t*, void*, int)'    {NCZ_get_vara}\n  [A] 'function int NCZ_get_vars(int, int, const size_t*, const size_t*, const ptrdiff_t*, void*, nc_type)'    {NCZ_get_vars}\n  [A] 'function int NCZ_grpkey(const NC_GRP_INFO_T*, char**)'    {NCZ_grpkey}\n  [A] 'function int NCZ_grpname_full(int, char**)'    {NCZ_grpname_full}\n  [A] 'function int NCZ_initialize()'    {NCZ_initialize}\n  [A] 'function int NCZ_initialize_internal()'    {NCZ_initialize_internal}\n  [A] 'function int NCZ_inq(int, int*, int*, int*, int*)'    {NCZ_inq}\n  [A] 'function int NCZ_inq_att(int, int, const char*, nc_type*, size_t*)'    {NCZ_inq_att}\n  [A] 'function int NCZ_inq_attid(int, int, const char*, int*)'    {NCZ_inq_attid}\n  [A] 'function int NCZ_inq_attname(int, int, int, char*)'    {NCZ_inq_attname}\n  [A] 'function int NCZ_inq_dim(int, int, char*, size_t*)'    {NCZ_inq_dim}\n  [A] 'function int NCZ_inq_dimid(int, const char*, int*)'    {NCZ_inq_dimid}\n  [A] 'function int NCZ_inq_dimids(int, int*, int*, int)'    {NCZ_inq_dimids}\n  [A] 'function int NCZ_inq_filter_avail(int, unsigned int)'    {NCZ_inq_filter_avail}\n  [A] 'function int NCZ_inq_format(int, int*)'    {NCZ_inq_format}\n  [A] 'function int NCZ_inq_format_extended(int, int*, int*)'    {NCZ_inq_format_extended}\n  [A] 'function int NCZ_inq_grp_full_ncid(int, const char*, int*)'    {NCZ_inq_grp_full_ncid}\n  [A] 'function int NCZ_inq_grp_parent(int, int*)'    {NCZ_inq_grp_parent}\n  [A] 'function int NCZ_inq_grpname(int, char*)'    {NCZ_inq_grpname}\n  [A] 'function int NCZ_inq_grpname_full(int, size_t*, char*)'    {NCZ_inq_grpname_full}\n  [A] 'function int NCZ_inq_grps(int, int*, int*)'    {NCZ_inq_grps}\n  [A] 'function int NCZ_inq_ncid(int, const char*, int*)'    {NCZ_inq_ncid}\n  [A] 'function int NCZ_inq_type(int, nc_type, char*, size_t*)'    {NCZ_inq_type}\n  [A] 'function int NCZ_inq_type_equal(int, nc_type, int, nc_type, int*)'    {NCZ_inq_type_equal}\n  [A] 'function int NCZ_inq_typeid(int, const char*, nc_type*)'    {NCZ_inq_typeid}\n  [A] 'function int NCZ_inq_typeids(int, int*, int*)'    {NCZ_inq_typeids}\n  [A] 'function int NCZ_inq_unlimdim(int, int*)'    {NCZ_inq_unlimdim}\n  [A] 'function int NCZ_inq_unlimdims(int, int*, int*)'    {NCZ_inq_unlimdims}\n  [A] 'function int NCZ_inq_user_type(int, nc_type, char*, size_t*, nc_type*, size_t*, int*)'    {NCZ_inq_user_type}\n  [A] 'function int NCZ_inq_var_all(int, int, char*, nc_type*, int*, int*, int*, int*, int*, int*, int*, int*, size_t*, int*, void*, int*, unsigned int*, size_t*, unsigned int*)'    {NCZ_inq_var_all}\n  [A] 'function int NCZ_inq_var_filter_ids(int, int, size_t*, unsigned int*)'    {NCZ_inq_var_filter_ids}\n  [A] 'function int NCZ_inq_var_filter_info(int, int, unsigned int, size_t*, unsigned int*)'    {NCZ_inq_var_filter_info}\n  [A] 'function int NCZ_inq_var_quantize(int, int, int*, int*)'    {NCZ_inq_var_quantize}\n  [A] 'function int NCZ_inq_varid(int, const char*, int*)'    {NCZ_inq_varid}\n  [A] 'function int NCZ_inq_varids(int, int*, int*)'    {NCZ_inq_varids}\n  [A] 'function int NCZ_isLittleEndian()'    {NCZ_isLittleEndian}\n  [A] 'function int NCZ_ischunkname(const char*, char)'    {NCZ_ischunkname}\n  [A] 'function int NCZ_isnetcdf4(NC_FILE_INFO*)'    {NCZ_isnetcdf4}\n  [A] 'function int NCZ_new_provenance(NC_FILE_INFO_T*)'    {NCZ_new_provenance}\n  [A] 'function int NCZ_open(const char*, int, int, size_t*, void*, const NC_Dispatch*, int)'    {NCZ_open}\n  [A] 'function void NCZ_printxcache(NCZChunkCache*)'    {NCZ_printxcache}\n  [A] 'function int NCZ_projectslices(size64_t*, size64_t*, NCZSlice*, Common*, NCZOdometer**)'    {NCZ_projectslices}\n  [A] 'function int NCZ_provenance_finalize()'    {NCZ_provenance_finalize}\n  [A] 'function int NCZ_provenance_init()'    {NCZ_provenance_init}\n  [A] 'function int NCZ_put_att(int, int, const char*, nc_type, size_t, void*, nc_type)'    {NCZ_put_att}\n  [A] 'function int NCZ_put_vara(int, int, const size_t*, const size_t*, void*, int)'    {NCZ_put_vara}\n  [A] 'function int NCZ_put_vars(int, int, const size_t*, const size_t*, const ptrdiff_t*, void*, nc_type)'    {NCZ_put_vars}\n  [A] 'function int NCZ_read_cache_chunk(NCZChunkCache*, const size64_t*, void**)'    {NCZ_read_cache_chunk}\n  [A] 'function int NCZ_read_chunk(int, int, size64_t*, void*)'    {NCZ_read_chunk}\n  [A] 'function int NCZ_read_provenance(NC_FILE_INFO_T*, const char*, const char*)'    {NCZ_read_provenance}\n  [A] 'function int NCZ_readarray(NCZMAP*, const char*, NCjson**)'    {NCZ_readarray}\n  [A] 'function int NCZ_readdict(NCZMAP*, const char*, NCjson**)'    {NCZ_readdict}\n  [A] 'function int NCZ_reclaim_fill_chunk(NCZChunkCache*)'    {NCZ_reclaim_fill_chunk}\n  [A] 'function int NCZ_reclaim_fill_value(NC_VAR_INFO_T*)'    {NCZ_reclaim_fill_value}\n  [A] 'function int NCZ_redef(int)'    {NCZ_redef}\n  [A] 'function int NCZ_rename_att(int, int, const char*, const char*)'    {NCZ_rename_att}\n  [A] 'function int NCZ_rename_dim(int, int, const char*)'    {NCZ_rename_dim}\n  [A] 'function int NCZ_rename_grp(int, const char*)'    {NCZ_rename_grp}\n  [A] 'function int NCZ_rename_var(int, int, const char*)'    {NCZ_rename_var}\n  [A] 'function int NCZ_set_fill(int, int, int*)'    {NCZ_set_fill}\n  [A] 'function int NCZ_set_var_chunk_cache(int, int, size_t, size_t, float)'    {NCZ_set_var_chunk_cache}\n  [A] 'function int NCZ_stringconvert(nc_type, size_t, void*, NCjson**)'    {NCZ_stringconvert}\n  [A] 'function int NCZ_stringconvert1(nc_type, size_t, char*, NCjson*)'    {NCZ_stringconvert1}\n  [A] 'function int NCZ_subobjects(NCZMAP*, const char*, const char*, char, NClist*)'    {NCZ_subobjects}\n  [A] 'function int NCZ_swapatomicdata(size_t, void*, int)'    {NCZ_swapatomicdata}\n  [A] 'function int NCZ_sync(int)'    {NCZ_sync}\n  [A] 'function int NCZ_transfer(Common*, NCZSlice*)'    {NCZ_transfer}\n  [A] 'function int NCZ_transferscalar(Common*)'    {NCZ_transferscalar}\n  [A] 'function int NCZ_transferslice(NC_VAR_INFO_T*, int, size64_t*, size64_t*, size64_t*, void*, nc_type)'    {NCZ_transferslice}\n  [A] 'function int NCZ_uploadjson(NCZMAP*, const char*, NCjson*)'    {NCZ_uploadjson}\n  [A] 'function int NCZ_varkey(const NC_VAR_INFO_T*, char**)'    {NCZ_varkey}\n  [A] 'function int NCZ_write_provenance(NC_FILE_INFO_T*)'    {NCZ_write_provenance}\n  [A] 'function int NC_NOOP_inq_filter_avail(int, unsigned int)'    {NC_NOOP_inq_filter_avail}\n  [A] 'function int NC_NOTNC4_def_var_quantize(int, int, int, int)'    {NC_NOTNC4_def_var_quantize}\n  [A] 'function int NC_NOTNC4_inq_var_quantize(int, int, int*, int*)'    {NC_NOTNC4_inq_var_quantize}\n  [A] 'function int NC_authgets3profile(const char*, AWSprofile**)'    {NC_authgets3profile}\n  [A] 'function void NC_freeglobalstate()'    {NC_freeglobalstate}\n  [A] 'function int NC_getactives3profile(NCURI*, const char**)'    {NC_getactives3profile}\n  [A] 'function int NC_getdefaults3region(NCURI*, const char**)'    {NC_getdefaults3region}\n  [A] 'function NCglobalstate* NC_getglobalstate()'    {NC_getglobalstate}\n  [A] 'function int NC_iss3(NCURI*)'    {NC_iss3}\n  [A] 'function int NC_join(NClist*, char**)'    {NC_join}\n  [A] 'function char* NC_rclookupx(NCURI*, const char*)'    {NC_rclookupx}\n  [A] 'function int NC_readfileF(FILE*, NCbytes*, long long int)'    {NC_readfileF}\n  [A] 'function int NC_readfilen(const char*, NCbytes*, long long int)'    {NC_readfilen}\n  [A] 'function int NC_s3clear(NCS3INFO*)'    {NC_s3clear}\n  [A] 'function int NC_s3profilelookup(const char*, const char*, const char**)'    {NC_s3profilelookup}\n  [A] 'function int NC_s3urlprocess(NCURI*, NCS3INFO*)'    {NC_s3urlprocess}\n  [A] 'function int NC_s3urlrebuild(NCURI*, NCURI**, char**, char**)'    {NC_s3urlrebuild}\n  [A] 'function char* NC_shellUnescape(const char*)'    {NC_shellUnescape}\n  [A] 'function int NC_split_delim(const char*, char, NClist*)'    {NC_split_delim}\n  [A] 'function int NC_testpathmode(const char*, const char*)'    {NC_testpathmode}\n  [A] 'function int NC_type_alignment(int, nc_type, size_t*)'    {NC_type_alignment}\n  [A] 'function int NCgetinputpathkind(const char*)'    {NCgetinputpathkind}\n  [A] 'function const char* NCgetkindname(int)'    {NCgetkindname}\n  [A] 'function int NCgetlocalpathkind()'    {NCgetlocalpathkind}\n  [A] 'function int NCisnetworkpath(const char*)'    {NCisnetworkpath}\n  [A] 'function int NCpathcanonical(const char*, char**)'    {NCpathcanonical}\n  [A] 'function const char* astype(int, void*)'    {astype}\n  [A] 'function int hdf5set_format_compatibility(hid_t)'    {hdf5set_format_compatibility}\n  [A] 'function int loadcodecdefaults(const char*, const NCZ_codec_t**, NCPSharedLib*, int*)'    {loadcodecdefaults}\n  [A] 'function void nc4_finalize_logging()'    {nc4_finalize_logging}\n  [A] 'function int nc4_get_default_atomic_fill_value(nc_type, void*)'    {nc4_get_default_atomic_fill_value}\n  [A] 'function int nc4_init_logging()'    {nc4_init_logging}\n  [A] 'function int nc4_rec_grp_del_att_data(NC_GRP_INFO_T*)'    {nc4_rec_grp_del_att_data}\n  [A] 'function int nc_copy_data(int, nc_type, void*, size_t, void*)'    {nc_copy_data}\n  [A] 'function int nc_copy_data_all(int, nc_type, void*, size_t, void**)'    {nc_copy_data_all}\n  [A] 'function int nc_def_var_blosc(int, int, unsigned int, unsigned int, unsigned int, unsigned int)'    {nc_def_var_blosc}\n  [A] 'function int nc_def_var_bzip2(int, int, int)'    {nc_def_var_bzip2}\n  [A] 'function int nc_def_var_quantize(int, int, int, int)'    {nc_def_var_quantize}\n  [A] 'function int nc_def_var_zstandard(int, int, int)'    {nc_def_var_zstandard}\n  [A] 'function int nc_dump_data(int, nc_type, void*, size_t, char**)'    {nc_dump_data}\n  [A] 'function int nc_get_alignment(int*, int*)'    {nc_get_alignment}\n  [A] 'function int nc_inq_filter_avail(int, unsigned int)'    {nc_inq_filter_avail}\n  [A] 'function int nc_inq_var_blosc(int, int, int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)'    {nc_inq_var_blosc}\n  [A] 'function int nc_inq_var_bzip2(int, int, int*, int*)'    {nc_inq_var_bzip2}\n  [A] 'function int nc_inq_var_quantize(int, int, int*, int*)'    {nc_inq_var_quantize}\n  [A] 'function int nc_inq_var_zstandard(int, int, int*, int*)'    {nc_inq_var_zstandard}\n  [A] 'function int nc_print_data(int, nc_type, void*, size_t)'    {nc_print_data}\n  [A] 'function int nc_reclaim_data(int, nc_type, void*, size_t)'    {nc_reclaim_data}\n  [A] 'function int nc_reclaim_data_all(int, nc_type, void*, size_t)'    {nc_reclaim_data_all}\n  [A] 'function int nc_set_alignment(int, int)'    {nc_set_alignment}\n  [A] 'function int ncaux_h5filterspec_parse_parameter(const char*, size_t*, unsigned int*)'    {ncaux_h5filterspec_parse_parameter}\n  [A] 'function int ncaux_reclaim_data_all(int, int, void*, size_t)'    {ncaux_reclaim_data_all}\n  [A] 'function int nclistclearall(NClist*)'    {nclistclearall}\n  [A] 'function int ncp_unix_finalize()'    {ncp_unix_finalize}\n  [A] 'function int ncp_unix_initialize()'    {ncp_unix_initialize}\n  [A] 'function const char* ncpgeterrmsg(NCPSharedLib*)'    {ncpgeterrmsg}\n  [A] 'function const char* ncpgetpath(NCPSharedLib*)'    {ncpgetpath}\n  [A] 'function void* ncpgetsymbol(NCPSharedLib*, const char*)'    {ncpgetsymbol}\n  [A] 'function int ncpisloaded(NCPSharedLib*)'    {ncpisloaded}\n  [A] 'function int ncpload(NCPSharedLib*, const char*, int)'    {ncpload}\n  [A] 'function int ncpsharedlibfree(NCPSharedLib*)'    {ncpsharedlibfree}\n  [A] 'function int ncpsharedlibnew(NCPSharedLib**)'    {ncpsharedlibnew}\n  [A] 'function int ncpunload(NCPSharedLib*)'    {ncpunload}\n  [A] 'function void ncrc_initialize()'    {ncrc_initialize}\n  [A] 'function int ncthrow(int, const char*, int)'    {ncthrow}\n  [A] 'function NCURI* ncuriclone(NCURI*)'    {ncuriclone}\n  [A] 'function int ncurirebuild(NCURI*)'    {ncurirebuild}\n  [A] 'function int ncurisethost(NCURI*, const char*)'    {ncurisethost}\n  [A] 'function char* ncxml_attr(ncxml_t, const char*)'    {ncxml_attr}\n  [A] 'function int ncxml_attr_pairs(ncxml_t, char***)'    {ncxml_attr_pairs}\n  [A] 'function ncxml_t ncxml_child(ncxml_t, const char*)'    {ncxml_child}\n  [A] 'function ncxml_t ncxml_child_first(ncxml_t)'    {ncxml_child_first}\n  [A] 'function ncxml_t ncxml_child_next(ncxml_t)'    {ncxml_child_next}\n  [A] 'function void ncxml_finalize()'    {ncxml_finalize}\n  [A] 'function void ncxml_free(ncxml_doc_t)'    {ncxml_free}\n  [A] 'function void ncxml_initialize()'    {ncxml_initialize}\n  [A] 'function const char* ncxml_name(ncxml_t)'    {ncxml_name}\n  [A] 'function ncxml_t ncxml_next(ncxml_t, const char*)'    {ncxml_next}\n  [A] 'function ncxml_doc_t ncxml_parse(char*, size_t)'    {ncxml_parse}\n  [A] 'function ncxml_t ncxml_root(ncxml_doc_t)'    {ncxml_root}\n  [A] 'function char* ncxml_text(ncxml_t)'    {ncxml_text}\n  [A] 'function int ncz_chunking_init()'    {ncz_chunking_init}\n  [A] 'function int ncz_close_file(NC_FILE_INFO_T*, int)'    {ncz_close_file}\n  [A] 'function int ncz_closeorabort(NC_FILE_INFO_T*, void*, int)'    {ncz_closeorabort}\n  [A] 'function int ncz_create_dataset(NC_FILE_INFO_T*, NC_GRP_INFO_T*, const char**)'    {ncz_create_dataset}\n  [A] 'function int ncz_create_fillvalue(NC_VAR_INFO_T*)'    {ncz_create_fillvalue}\n  [A] 'function int ncz_def_var_chunking_ints(int, int, int, int*)'    {ncz_def_var_chunking_ints}\n  [A] 'function int ncz_dtype2typeinfo(const char*, nc_type*, int*)'    {ncz_dtype2typeinfo}\n  [A] 'function int ncz_enddef_netcdf4_file(NC_FILE_INFO_T*)'    {ncz_enddef_netcdf4_file}\n  [A] 'function int ncz_fill_value_sort(nc_type, int*)'    {ncz_fill_value_sort}\n  [A] 'function int ncz_find_default_chunksizes2(NC_GRP_INFO_T*, NC_VAR_INFO_T*)'    {ncz_find_default_chunksizes2}\n  [A] 'function int ncz_find_dim_len(NC_GRP_INFO_T*, int, size_t**)'    {ncz_find_dim_len}\n  [A] 'function int ncz_find_grp_file_var(int, int, NC_FILE_INFO_T**, NC_GRP_INFO_T**, NC_VAR_INFO_T**)'    {ncz_find_grp_file_var}\n  [A] 'function int ncz_find_grp_var_att(int, int, const char*, int, int, char*, NC_FILE_INFO_T**, NC_GRP_INFO_T**, NC_VAR_INFO_T**, NC_ATT_INFO_T**)'    {ncz_find_grp_var_att}\n  [A] 'function int ncz_get_att_special(NC_FILE_INFO_T*, NC_VAR_INFO_T*, const char*, nc_type*, nc_type, size_t*, int*, void*)'    {ncz_get_att_special}\n  [A] 'function int ncz_get_var_meta(NC_FILE_INFO_T*, NC_VAR_INFO_T*)'    {ncz_get_var_meta}\n  [A] 'function int ncz_getattlist(NC_GRP_INFO_T*, int, NC_VAR_INFO_T**, NCindex**)'    {ncz_getattlist}\n  [A] 'function int ncz_gettype(NC_FILE_INFO_T*, NC_GRP_INFO_T*, int, NC_TYPE_INFO_T**)'    {ncz_gettype}\n  [A] 'function int ncz_makeattr(NC_OBJ*, NCindex*, const char*, nc_type, size_t, void*, NC_ATT_INFO_T**)'    {ncz_makeattr}\n  [A] 'function int ncz_nctype2typeinfo(const char*, nc_type*)'    {ncz_nctype2typeinfo}\n  [A] 'function int ncz_open_dataset(NC_FILE_INFO_T*, const char**)'    {ncz_open_dataset}\n  [A] 'function int ncz_put_att(NC_GRP_INFO_T*, int, const char*, nc_type, size_t, void*, nc_type, int)'    {ncz_put_att}\n  [A] 'function int ncz_read_atts(NC_FILE_INFO_T*, NC_OBJ*)'    {ncz_read_atts}\n  [A] 'function int ncz_read_file(NC_FILE_INFO_T*)'    {ncz_read_file}\n  [A] 'function int ncz_read_superblock(NC_FILE_INFO_T*, char**, char**)'    {ncz_read_superblock}\n  [A] 'function int ncz_splitkey(const char*, NClist*)'    {ncz_splitkey}\n  [A] 'function int ncz_sync_atts(NC_FILE_INFO_T*, NC_OBJ*, NCindex*, int)'    {ncz_sync_atts}\n  [A] 'function int ncz_sync_file(NC_FILE_INFO_T*, int)'    {ncz_sync_file}\n  [A] 'function int ncz_sync_grp(NC_FILE_INFO_T*, NC_GRP_INFO_T*, int)'    {ncz_sync_grp}\n  [A] 'function int ncz_write_var(NC_VAR_INFO_T*)'    {ncz_write_var}\n  [A] 'function int ncz_zarr_type_name(nc_type, int, const char**)'    {ncz_zarr_type_name}\n  [A] 'function int nczm_appendn(char**, int, ...)'    {nczm_appendn}\n  [A] 'function int nczm_basename(const char*, char**)'    {nczm_basename}\n  [A] 'function int nczm_canonicalpath(const char*, char**)'    {nczm_canonicalpath}\n  [A] 'function int nczm_clear(NCZMAP*)'    {nczm_clear}\n  [A] 'function int nczm_concat(const char*, const char*, char**)'    {nczm_concat}\n  [A] 'function int nczm_divide_at(const char*, int, char**, char**)'    {nczm_divide_at}\n  [A] 'function int nczm_isabsolutepath(const char*)'    {nczm_isabsolutepath}\n  [A] 'function int nczm_join(NClist*, char**)'    {nczm_join}\n  [A] 'function int nczm_lastsegment(const char*, char**)'    {nczm_lastsegment}\n  [A] 'function int nczm_localize(const char*, char**, int)'    {nczm_localize}\n  [A] 'function int nczm_segment1(const char*, char**)'    {nczm_segment1}\n  [A] 'function void nczm_sortenvv(int, char**)'    {nczm_sortenvv}\n  [A] 'function void nczm_sortlist(NClist*)'    {nczm_sortlist}\n  [A] 'function int nczm_split(const char*, NClist*)'    {nczm_split}\n  [A] 'function int nczm_split_delim(const char*, char, NClist*)'    {nczm_split_delim}\n  [A] 'function int nczmap_close(NCZMAP*, int)'    {nczmap_close}\n  [A] 'function int nczmap_create(NCZM_IMPL, const char*, int, size64_t, void*, NCZMAP**)'    {nczmap_create}\n  [A] 'function int nczmap_exists(NCZMAP*, const char*)'    {nczmap_exists}\n  [A] 'function NCZM_FEATURES nczmap_features(NCZM_IMPL)'    {nczmap_features}\n  [A] 'function int nczmap_len(NCZMAP*, const char*, size64_t*)'    {nczmap_len}\n  [A] 'function int nczmap_open(NCZM_IMPL, const char*, int, size64_t, void*, NCZMAP**)'    {nczmap_open}\n  [A] 'function int nczmap_read(NCZMAP*, const char*, size64_t, size64_t, void*)'    {nczmap_read}\n  [A] 'function int nczmap_search(NCZMAP*, const char*, NClist*)'    {nczmap_search}\n  [A] 'function int nczmap_write(NCZMAP*, const char*, size64_t, size64_t, void*)'    {nczmap_write}\n  [A] 'function size64_t nczodom_avail(const NCZOdometer*)'    {nczodom_avail}\n  [A] 'function void nczodom_free(NCZOdometer*)'    {nczodom_free}\n  [A] 'function NCZOdometer* nczodom_fromslices(int, const NCZSlice*)'    {nczodom_fromslices}\n  [A] 'function size64_t* nczodom_indices(const NCZOdometer*)'    {nczodom_indices}\n  [A] 'function int nczodom_more(const NCZOdometer*)'    {nczodom_more}\n  [A] 'function NCZOdometer* nczodom_new(int, const size64_t*, const size64_t*, const size64_t*, const size64_t*)'    {nczodom_new}\n  [A] 'function void nczodom_next(NCZOdometer*)'    {nczodom_next}\n  [A] 'function size64_t nczodom_offset(const NCZOdometer*)'    {nczodom_offset}\n  [A] 'function void nczodom_reset(NCZOdometer*)'    {nczodom_reset}\n  [A] 'function void nczodom_skipavail(NCZOdometer*)'    {nczodom_skipavail}\n  [A] 'function char* nczprint_allsliceprojections(int, const NCZSliceProjections*)'    {nczprint_allsliceprojections}\n  [A] 'function char* nczprint_chunkrange(const NCZChunkRange)'    {nczprint_chunkrange}\n  [A] 'function char* nczprint_envv(const char**)'    {nczprint_envv}\n  [A] 'function char* nczprint_idvector(size_t, const int*)'    {nczprint_idvector}\n  [A] 'function char* nczprint_odom(const NCZOdometer*)'    {nczprint_odom}\n  [A] 'function char* nczprint_paramvector(size_t, const unsigned int*)'    {nczprint_paramvector}\n  [A] 'function char* nczprint_projection(const NCZProjection)'    {nczprint_projection}\n  [A] 'function char* nczprint_projectionx(const NCZProjection, int)'    {nczprint_projectionx}\n  [A] 'function void nczprint_reclaim()'    {nczprint_reclaim}\n  [A] 'function char* nczprint_sizevector(size_t, const size_t*)'    {nczprint_sizevector}\n  [A] 'function char* nczprint_slab(int, const NCZSlice*)'    {nczprint_slab}\n  [A] 'function char* nczprint_slice(const NCZSlice)'    {nczprint_slice}\n  [A] 'function char* nczprint_sliceprojections(const NCZSliceProjections)'    {nczprint_sliceprojections}\n  [A] 'function char* nczprint_sliceprojectionsx(const NCZSliceProjections, int)'    {nczprint_sliceprojectionsx}\n  [A] 'function char* nczprint_slices(int, const NCZSlice*)'    {nczprint_slices}\n  [A] 'function char* nczprint_slicesx(int, const NCZSlice*, int)'    {nczprint_slicesx}\n  [A] 'function char* nczprint_slicex(const NCZSlice, int)'    {nczprint_slicex}\n  [A] 'function char* nczprint_vector(size_t, const size64_t*)'    {nczprint_vector}\n  [A] 'function void nczprintprovenance(NC4_Provenance*)'    {nczprintprovenance}\n  [A] 'function void zdumpcommon(const Common*)'    {zdumpcommon}\n  [A] 'function int zfilesearch(NCZMAP*, const char*, NClist*)'    {zfilesearch}\n\n22 functions with some indirect sub-type change:\n\n  [C] 'function OCerror DAPparse(OCstate*, OCtree*, char*)' at dapparse.c:493:1 has some indirect sub-type changes:\n    parameter 1 of type 'OCstate*' has sub-type changes:\n      in pointed to type 'typedef OCstate' at ocinternal.h:67:1:\n        underlying type 'struct OCstate' at ocinternal.h:163:1 changed:\n          type size hasn't changed\n          1 data member change:\n            type of 'NCauth* auth' changed:\n              in pointed to type 'typedef NCauth' at ncauth.h:53:1:\n                underlying type 'struct NCauth' at ncauth.h:18:1 changed:\n                  type size changed from 1344 to 1280 (in bits)\n                  1 data member change:\n                    type of 's3credentials s3creds' changed:\n                      entity changed from 'struct s3credentials' to 'char*'\n                      type size changed from 128 to 64 (in bits)\n                    and name of 'NCauth::s3creds' changed to 'NCauth::s3profile' at ncauth.h:52:1\n\n  [C] 'function int NC3_create(const char*, int, size_t, int, size_t*, void*, const NC_Dispatch*, int)' at nc3internal.c:1015:1 has some indirect sub-type changes:\n    parameter 7 of type 'const NC_Dispatch*' has sub-type changes:\n      in pointed to type 'const NC_Dispatch':\n        in unqualified underlying type 'typedef NC_Dispatch' at netcdf.h:570:1:\n          underlying type 'struct NC_Dispatch' at netcdf_dispatch.h:34:1 changed:\n            type size changed from 4800 to 4992 (in bits)\n            3 data member insertions:\n              'int (int, int, int, int)* def_var_quantize', at offset 4800 (in bits) at netcdf_dispatch.h:151:1\n              'int (int, int, int*, int*)* inq_var_quantize', at offset 4864 (in bits) at netcdf_dispatch.h:152:1\n              'int (int, unsigned int)* inq_filter_avail', at offset 4928 (in bits) at netcdf_dispatch.h:154:1\n            no data member changes (2 filtered);\n\n  [C] 'function int NC4_create_image_file(NC_FILE_INFO_T*, size_t)' at nc4mem.c:65:1 has some indirect sub-type changes:\n    parameter 1 of type 'NC_FILE_INFO_T*' has sub-type changes:\n      in pointed to type 'typedef NC_FILE_INFO_T' at nc4internal.h:330:1:\n        underlying type 'struct NC_FILE_INFO' at nc4internal.h:289:1 changed:\n          type size changed from 1536 to 1600 (in bits)\n          2 data member insertions:\n            'nc_bool_t no_attr_create_order', at offset 384 (in bits) at nc4internal.h:302:1\n            'nc_bool_t no_dimscale_attach', at offset 416 (in bits) at nc4internal.h:303:1\n          14 data member changes (1 filtered):\n            'int flags' offset changed from 256 to 288 (in bits) (by +32 bits)\n            'int cmode' offset changed from 288 to 256 (in bits) (by -32 bits)\n            'int fill_mode' offset changed from 384 to 448 (in bits) (by +64 bits)\n            'nc_bool_t no_write' offset changed from 416 to 480 (in bits) (by +64 bits)\n            'NC_GRP_INFO_T* root_grp' offset changed from 448 to 512 (in bits) (by +64 bits)\n            'short int next_nc_grpid' offset changed from 512 to 576 (in bits) (by +64 bits)\n            'int next_typeid' offset changed from 544 to 608 (in bits) (by +64 bits)\n            'int next_dimid' offset changed from 576 to 640 (in bits) (by +64 bits)\n            'NClist* alldims' offset changed from 640 to 704 (in bits) (by +64 bits)\n            'NClist* alltypes' offset changed from 704 to 768 (in bits) (by +64 bits)\n            'NClist* allgroups' offset changed from 768 to 832 (in bits) (by +64 bits)\n            'void* format_file_info' offset changed from 832 to 896 (in bits) (by +64 bits)\n            'NC4_Provenance provenance' offset changed from 896 to 960 (in bits) (by +64 bits)\n            'NC4_Memio mem' offset changed from 1024 to 1088 (in bits) (by +64 bits)\n\n  [C] 'function int NC4_extract_file_image(NC_FILE_INFO_T*)' at nc4memcb.c:857:1 has some indirect sub-type changes:\n    parameter 2 of type 'int' was added\n\n  [C] 'function int NC4_hdf5_addfilter(NC_VAR_INFO_T*, unsigned int, size_t, const unsigned int*)' at hdf5filter.c:256:1 has some indirect sub-type changes:\n    parameter 1 of type 'NC_VAR_INFO_T*' has sub-type changes:\n      in pointed to type 'typedef NC_VAR_INFO_T' at nc4internal.h:216:1:\n        underlying type 'struct NC_VAR_INFO' at nc4internal.h:177:1 changed:\n          type size hasn't changed\n          3 data member deletions:\n            'nc_bool_t shuffle', at offset 1312 (in bits) at nc4internal.h:203:1\n            'size_t chunk_cache_size', at offset 1408 (in bits) at nc4internal.h:205:1\n            'size_t chunk_cache_nelems', at offset 1472 (in bits) at nc4internal.h:206:1\n          1 data member insertion:\n            'int nsd', at offset 1568 (in bits) at nc4internal.h:213:1\n          3 data member changes (2 filtered):\n            type of 'nc_bool_t fletcher32' changed:\n              entity changed from 'typedef nc_bool_t' to 'struct ChunkCache' at nc4internal.h:207:1\n              type size changed from 32 to 192 (in bits)\n              type alignment changed from 32 to 0\n            and name of 'NC_VAR_INFO::fletcher32' changed to 'NC_VAR_INFO::chunkcache' at nc4internal.h:211:1\n            type of 'float chunk_cache_preemption' changed:\n              type name changed from 'float' to 'int'\n              type size hasn't changed\n            and name of 'NC_VAR_INFO::chunk_cache_preemption' changed to 'NC_VAR_INFO::quantize_mode' at nc4internal.h:212:1\n            type of 'NC_TYPE_INFO* type_info' changed:\n              in pointed to type 'struct NC_TYPE_INFO' at nc4internal.h:239:1:\n                type size hasn't changed\n                1 data member changes (1 filtered):\n                  type of 'union {struct {NClist* enum_member; nc_type base_nc_typeid;} e; Fields c; struct {nc_type base_nc_typeid;} v;} u' changed:\n                    type size hasn't changed\n                    1 data member change:\n                      type of 'Fields c' changed:\n                        type size changed from 64 to 128 (in bits)\n                        1 data member insertion:\n                          'int varsized', at offset 64 (in bits) at nc4internal.h:258:1\n    parameter 5 of type 'int' was added\n\n  [C] 'function void NCD4_applyclientparamcontrols(NCD4INFO*)' at d4file.c:424:1 has some indirect sub-type changes:\n    parameter 1 of type 'NCD4INFO*' has sub-type changes:\n      in pointed to type 'typedef NCD4INFO' at ncd4types.h:42:1:\n        underlying type 'struct NCD4INFO' at ncd4types.h:321:1 changed:\n          type size hasn't changed\n          1 data member changes (2 filtered):\n            type of 'struct {int realfile; char* filename; int nc4id; NCD4meta* metadata;} substrate' changed:\n              type size hasn't changed\n              1 data member change:\n                type of 'NCD4meta* metadata' changed:\n                  in pointed to type 'typedef NCD4meta' at ncd4types.h:48:1:\n                    underlying type 'struct NCD4meta' at ncd4types.h:261:1 changed:\n                      type size hasn't changed\n                      1 data member changes (1 filtered):\n                        type of 'NCD4serial serial' changed:\n                          underlying type 'struct NCD4serial' at ncd4types.h:246:1 changed:\n                            type size hasn't changed\n                            1 data member insertion:\n                              'int httpcode', at offset 384 (in bits) at ncd4types.h:253:1\n                            3 data member changes:\n                              'int hostlittleendian' offset changed from 384 to 416 (in bits) (by +32 bits)\n                              'int remotelittleendian' offset changed from 416 to 448 (in bits) (by +32 bits)\n                              'int checksumhack' offset changed from 448 to 480 (in bits) (by +32 bits)\n\n  [C] 'function int NCD4_fetchurl(CURL*, const char*, NCbytes*, long int*)' at d4http.c:90:1 has some indirect sub-type changes:\n    parameter 5 of type 'int*' was added\n\n  [C] 'function NCD4meta* NCD4_newmeta(NCD4INFO*, size_t, void*)' at d4meta.c:98:1 has some indirect sub-type changes:\n    parameter 2 of type 'typedef size_t' was removed\n    parameter 3 of type 'void*' was removed\n\n  [C] 'function CURLcode NCD4_reportcurlerror(CURLcode)' at d4curlfunctions.c:452:1 has some indirect sub-type changes:\n    return type changed:\n      underlying type 'enum CURLcode' at curl.h:483:1 changed:\n        type size hasn't changed\n        2 enumerator deletions:\n          'CURLcode::CURLE_LDAP_INVALID_URL' value '62'\n          'CURLcode::CURLE_CONV_REQD' value '76'\n        3 enumerator insertions:\n          'CURLcode::CURLE_OBSOLETE62' value '62'\n          'CURLcode::CURLE_OBSOLETE76' value '76'\n          'CURLcode::CURLE_UNRECOVERABLE_POLL' value '99'\n        1 enumerator change:\n          'CURLcode::CURL_LAST' from value '99' to '100' at curl.h:492:1\n\n  [C] 'function int NC_calcsize(const NC3_INFO*, off_t*)' at nc3internal.c:950:1 has some indirect sub-type changes:\n    parameter 1 of type 'const NC3_INFO*' has sub-type changes:\n      in pointed to type 'const NC3_INFO':\n        in unqualified underlying type 'typedef NC3_INFO' at nc3internal.h:45:1:\n          underlying type 'struct NC3_INFO' at nc3internal.h:224:1 changed:\n            type size hasn't changed\n            1 data member insertion:\n              'int state', at offset 96 (in bits) at nc3internal.h:228:1\n            no data member change (1 filtered);\n\n  [C] 'function size_t NC_class_alignment(int)' at doffsets.c:112:1 has some indirect sub-type changes:\n    return type changed:\n      entity changed from 'typedef size_t' to compatible type 'int'\n        type name changed from 'unsigned long int' to 'int'\n        type size changed from 64 to 32 (in bits)\n    parameter 2 of type 'size_t*' was added\n\n  [C] 'function void NC_rcclear(NCRCinfo*)' at drc.c:126:1 has some indirect sub-type changes:\n    parameter 1 of type 'NCRCinfo*' has sub-type changes:\n      in pointed to type 'typedef NCRCinfo' at ncrc.h:54:1:\n        underlying type 'struct NCRCinfo' at ncrc.h:26:1 changed:\n          type size changed from 192 to 320 (in bits)\n          2 data member insertions:\n            'char* rchome', at offset 192 (in bits) at ncrc.h:52:1\n            'NClist* s3profiles', at offset 256 (in bits) at ncrc.h:53:1\n          no data member change (1 filtered);\n\n  [C] 'function int NC_rcfile_insert(const char*, const char*, const char*)' at drc.c:565:1 has some indirect sub-type changes:\n    parameter 4 of type 'const char*' was added\n\n  [C] 'function NCTriple* NC_rcfile_ith(NCRCinfo*, size_t)' at drc.c:608:1 has some indirect sub-type changes:\n    return type changed:\n      in pointed to type 'typedef NCTriple' at ncrc.h:34:1:\n        typedef name changed from NCTriple to NCRCentry at ncrc.h:34:1\n        underlying type 'struct NCTriple' at ncrc.h:19:1 changed:\n          type name changed from 'NCTriple' to 'NCRCentry'\n          type size changed from 192 to 256 (in bits)\n          1 data member insertion:\n            'char* path', at offset 64 (in bits) at ncrc.h:31:1\n          2 data member changes (1 filtered):\n            'char* key' offset changed from 64 to 128 (in bits) (by +64 bits)\n            'char* value' offset changed from 128 to 192 (in bits) (by +64 bits)\n\n  [C] 'function char* NC_rclookup(const char*, const char*)' at drc.c:221:1 has some indirect sub-type changes:\n    parameter 3 of type 'const char*' was added\n\n  [C] 'function int NC_testmode(const char*, const char*)' at dutil.c:375:1 has some indirect sub-type changes:\n    parameter 1 of type 'const char*' changed:\n      in pointed to type 'const char' at ncuri.h:42:1:\n        entity changed from 'const char' to 'typedef NCURI' at ncuri.h:42:1\n        type size changed from 8 to 704 (in bits)\n\n  [C] 'function int nc4_HDF5_close_att(NC_ATT_INFO_T*)' at hdf5internal.c:565:1 has some indirect sub-type changes:\n    parameter 1 of type 'NC_ATT_INFO_T*' has sub-type changes:\n      in pointed to type 'typedef NC_ATT_INFO_T' at nc4internal.h:178:1:\n        underlying type 'struct NC_ATT_INFO' at nc4internal.h:162:1 changed:\n          type size changed from 640 to 512 (in bits)\n          2 data member deletions:\n            'nc_vlen_t* vldata', at offset 512 (in bits) at nc4internal.h:172:1\n            'char** stdata', at offset 576 (in bits) at nc4internal.h:173:1\n\n  [C] 'function int nc4_convert_type(void*, void*, const nc_type, const nc_type, const size_t, int*, void*, int)' at nc4var.c:523:1 has some indirect sub-type changes:\n    parameter 9 of type 'int' was added\n    parameter 10 of type 'int' was added\n\n  [C] 'function int nc4_get_default_fill_value(nc_type, void*)' at nc4var.c:1881:1 has some indirect sub-type changes:\n    parameter 1 of type 'typedef nc_type' changed:\n      entity changed from 'typedef nc_type' to 'NC_TYPE_INFO_T*'\n      type size changed from 32 to 64 (in bits)\n\n  [C] 'function size_t ncaux_class_alignment(int)' at daux.c:202:1 has some indirect sub-type changes:\n    return type changed:\n      entity changed from 'typedef size_t' to compatible type 'int'\n        type name changed from 'unsigned long int' to 'int'\n        type size changed from 64 to 32 (in bits)\n    parameter 2 of type 'size_t*' was added\n\n  [C] 'function size_t ncaux_type_alignment(int, int)' at daux.c:923:1 has some indirect sub-type changes:\n    return type changed:\n      entity changed from 'typedef size_t' to compatible type 'int'\n        type name changed from 'unsigned long int' to 'int'\n        type size changed from 64 to 32 (in bits)\n    parameter 3 of type 'size_t*' was added\n\n  [C] 'function int ncbytessetcontents(NCbytes*, char*, unsigned long int)' at ncbytes.c:180:1 has some indirect sub-type changes:\n    parameter 2 of type 'char*' changed:\n      in pointed to type 'char':\n        type name changed from 'char' to 'void'\n        type size changed from 8 to 0 (in bits)\n\n4 Removed variables:\n\n  [D] 'size_t nc4_chunk_cache_nelems'    {nc4_chunk_cache_nelems}\n  [D] 'float nc4_chunk_cache_preemption'    {nc4_chunk_cache_preemption}\n  [D] 'size_t nc4_chunk_cache_size'    {nc4_chunk_cache_size}\n  [D] 'NCRCglobalstate ncrc_globalstate'    {ncrc_globalstate}\n\n5 Added variables:\n\n  [A] 'const NC_Dispatch* NCZ_dispatch_table'    {NCZ_dispatch_table}\n  [A] 'NCZ_Plugin* loaded_plugins[65535]'    {loaded_plugins}\n  [A] 'int loaded_plugins_max'    {loaded_plugins_max}\n  [A] 'NCPAPI ncp_unix_api'    {ncp_unix_api}\n  [A] 'int ncz_initialized'    {ncz_initialized}\n\n2 Added variable symbols not referenced by debug info:\n\n  [A] zmap_file\n  [A] zutest\n\n",
                    "return_code": 12,
                    "seconds": 0.973792552947998,
                    "command": "/usr/local/bin/abidiff --debug-info-dir1 /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib/debug --debug-info-dir2 /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib/debug  /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0 /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.1.0",
                    "spliced_lib": "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.1.0",
                    "original_lib": "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0",
                    "prediction": false,
                    "splice_type": "different_lib"
                }
            ],
            "abi-laboratory": [
                {
                    "message": "old: /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0\nnew: /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.1.0\nreport: /tmp/cache/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0-abi-laboratory-libnetcdf-so-19-0-0-libnetcdf-so-19-1-0.html\n*** stack smashing detected ***: terminated\n",
                    "return_code": 134,
                    "seconds": 0.2241373062133789,
                    "command": "/bin/bash /usr/bin/run_abi_laboratory.sh /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0 /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.1.0 libnetcdf-so-19-0-0-libnetcdf-so-19-1-0 /tmp/cache/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0-abi-laboratory-libnetcdf-so-19-0-0-libnetcdf-so-19-1-0.html",
                    "spliced_lib": "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.1.0",
                    "original_lib": "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0",
                    "prediction": false,
                    "splice_type": "different_lib"
                }
            ]
        },
        "stats": {
            "sizes_bytes": {
                "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0": 1399784,
                "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.1.0": 1579480
            }
        },
        "experiment": "usr/lib64/libnetcdf-fedora-libs-35-fedora-libs-37",
        "result": "diff-libraries-present",
        "success": true,
        "splice": "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libnetcdf.so.19.1.0",
        "package": "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libnetcdf.so.19.0.0",
        "different_libs": true
    }
]