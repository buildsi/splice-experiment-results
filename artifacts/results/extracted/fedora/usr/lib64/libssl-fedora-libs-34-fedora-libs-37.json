[
    {
        "specs": {},
        "ids": {},
        "original": [
            "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libssl.so.1.1.1n"
        ],
        "spliced": [
            "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libssl.so.3.0.5"
        ],
        "paths": {},
        "predictions": {
            "symbols": [
                {
                    "splice_type": "different_lib",
                    "original_lib": "libssl.so.1.1.1n",
                    "spliced_lib": "libssl.so.3.0.5",
                    "is_stripped_original": false,
                    "is_stripped_splice": false,
                    "command": "missing-previously-found-symbols",
                    "message": [
                        "EVP_CIPHER_block_size",
                        "SSLv3_client_method",
                        "DH_get0_key",
                        "EC_KEY_can_sign",
                        "DH_new",
                        "ERR_func_error_string",
                        "DH_bits",
                        "EVP_PKEY_size",
                        "EVP_camellia_128_cbc",
                        "BN_set_word",
                        "EVP_PKEY_get_default_digest_nid",
                        "EVP_CIPHER_key_length",
                        "DH_free",
                        "DH_get0_pqg",
                        "EVP_CIPHER_CTX_cipher",
                        "EVP_des_cbc",
                        "RAND_bytes",
                        "__memset_chk",
                        "EVP_add_cipher",
                        "EVP_PKEY_id",
                        "SRP_Calc_x",
                        "RSA_pkey_ctx_ctrl",
                        "EC_KEY_free",
                        "EVP_PKEY_CTX_new",
                        "strcasecmp",
                        "d2i_PrivateKey_bio",
                        "EVP_PKEY_get0",
                        "DH_check_params",
                        "PEM_read_bio_DHparams",
                        "EVP_DigestFinal",
                        "DH_set0_key",
                        "SRP_Calc_B",
                        "EVP_aria_256_gcm",
                        "X509_STORE_CTX_new",
                        "DH_get_nid",
                        "RAND_priv_bytes",
                        "EVP_PKEY_get0_DH",
                        "EVP_DigestVerifyInit",
                        "EVP_aes_192_cbc",
                        "strncasecmp",
                        "RSA_size",
                        "EVP_PKEY_set1_tls_encodedpoint",
                        "EVP_aes_256_cbc_hmac_sha256",
                        "EVP_PKEY_get1_tls_encodedpoint",
                        "EVP_PKEY_cmp",
                        "SHA384_Init",
                        "EVP_md5_sha1",
                        "EVP_aes_128_cbc_hmac_sha256",
                        "ERR_add_error_data",
                        "EVP_rc4_hmac_md5",
                        "EVP_rc4",
                        "EVP_PKEY_security_bits",
                        "EVP_CIPHER_iv_length",
                        "OBJ_NAME_add",
                        "EVP_MD_CTX_set_flags",
                        "CRYPTO_mem_ctrl",
                        "EVP_camellia_256_cbc",
                        "EVP_aria_128_gcm",
                        "SHA256_Transform",
                        "EC_METHOD_get_field_type",
                        "EVP_sha512",
                        "SHA1_Init",
                        "SHA256_Init",
                        "EVP_rc2_cbc",
                        "EVP_sha224",
                        "EVP_md5",
                        "BN_get_rfc3526_prime_6144",
                        "PEM_read_bio_PrivateKey",
                        "SHA1_Transform",
                        "EVP_sha256",
                        "EVP_aes_128_gcm",
                        "EVP_MD_type",
                        "EVP_sha1",
                        "EVP_idea_cbc",
                        "EVP_aes_256_cbc",
                        "EVP_aes_128_cbc_hmac_sha1",
                        "SHA512_Transform",
                        "EC_KEY_get_conv_form",
                        "DH_set0_pqg",
                        "EVP_CIPHER_CTX_block_size",
                        "EVP_PKEY_get0_EC_KEY",
                        "err_free_strings_int",
                        "RSA_private_decrypt",
                        "EC_curve_nist2nid",
                        "SHA512_Init",
                        "EVP_aes_128_cbc",
                        "EVP_DigestSignInit",
                        "SSLv3_server_method",
                        "EVP_add_digest",
                        "EVP_sha384",
                        "EC_GROUP_method_of",
                        "secure_getenv",
                        "EVP_MD_CTX_md",
                        "SHA224_Init",
                        "FIPS_mode",
                        "EVP_PKEY_new_raw_private_key",
                        "EVP_enc_null",
                        "X509_NAME_hash",
                        "EVP_aes_256_ccm",
                        "EVP_CIPHER_flags",
                        "EVP_chacha20_poly1305",
                        "EVP_aes_128_ccm",
                        "SRP_create_verifier_BN",
                        "ERR_put_error",
                        "MD5_Init",
                        "EVP_CIPHER_CTX_iv_length",
                        "EVP_PKEY_get0_RSA",
                        "EVP_rc2_40_cbc",
                        "CT_POLICY_EVAL_CTX_new",
                        "OPENSSL_LH_doall_arg",
                        "X509_STORE_load_locations",
                        "CTLOG_STORE_new",
                        "MD5_Transform",
                        "EC_KEY_new_by_curve_name",
                        "EVP_seed_cbc",
                        "EVP_des_ede3_cbc",
                        "EVP_PKEY_CTX_new_id",
                        "SSLv3_method",
                        "EVP_aes_256_gcm",
                        "EVP_aes_256_cbc_hmac_sha1",
                        "d2i_PrivateKey",
                        "SRP_Calc_client_key",
                        "EVP_MD_size",
                        "X509_STORE_set_default_paths",
                        "BN_new",
                        "SSL_get_peer_certificate",
                        "SRP_Calc_u"
                    ],
                    "prediction": false,
                    "seconds": 0.00023674964904785156
                },
                {
                    "splice_type": "different_lib",
                    "original_lib": "libssl.so.1.1.1n",
                    "spliced_lib": "libssl.so.3.0.5",
                    "is_stripped_original": false,
                    "is_stripped_splice": false,
                    "command": "missing-previously-found-exports",
                    "message": [
                        "SSLv3_server_method",
                        "SSL_get_peer_certificate",
                        "SSLv3_method",
                        "SSLv3_client_method"
                    ],
                    "prediction": false,
                    "seconds": 0.0018095970153808594
                }
            ],
            "libabigail": [
                {
                    "message": "ELF SONAME changed\nFunctions changes summary: 498 Removed, 0 Changed, 23 Added functions\nVariables changes summary: 0 Removed, 0 Changed, 0 Added variable\n\nSONAME changed from 'libssl.so.1.1' to 'libssl.so.3'\n\n498 Removed functions:\n\n  [D] 'function const BIO_METHOD* BIO_f_ssl()'    {BIO_f_ssl@@OPENSSL_1_1_0}\n  [D] 'function BIO* BIO_new_buffer_ssl_connect(SSL_CTX*)'    {BIO_new_buffer_ssl_connect@@OPENSSL_1_1_0}\n  [D] 'function BIO* BIO_new_ssl(SSL_CTX*, int)'    {BIO_new_ssl@@OPENSSL_1_1_0}\n  [D] 'function BIO* BIO_new_ssl_connect(SSL_CTX*)'    {BIO_new_ssl_connect@@OPENSSL_1_1_0}\n  [D] 'function int BIO_ssl_copy_session_id(BIO*, BIO*)'    {BIO_ssl_copy_session_id@@OPENSSL_1_1_0}\n  [D] 'function void BIO_ssl_shutdown(BIO*)'    {BIO_ssl_shutdown@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* DTLS_client_method()'    {DTLS_client_method@@OPENSSL_1_1_0}\n  [D] 'function size_t DTLS_get_data_mtu(const SSL*)'    {DTLS_get_data_mtu@@OPENSSL_1_1_1}\n  [D] 'function const SSL_METHOD* DTLS_method()'    {DTLS_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* DTLS_server_method()'    {DTLS_server_method@@OPENSSL_1_1_0}\n  [D] 'function void DTLS_set_timer_cb(SSL*, DTLS_timer_cb)'    {DTLS_set_timer_cb@@OPENSSL_1_1_1}\n  [D] 'function const SSL_METHOD* DTLSv1_2_client_method()'    {DTLSv1_2_client_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* DTLSv1_2_method()'    {DTLSv1_2_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* DTLSv1_2_server_method()'    {DTLSv1_2_server_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* DTLSv1_client_method()'    {DTLSv1_client_method@@OPENSSL_1_1_0}\n  [D] 'function int DTLSv1_listen(SSL*, BIO_ADDR*)'    {DTLSv1_listen@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* DTLSv1_method()'    {DTLSv1_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* DTLSv1_server_method()'    {DTLSv1_server_method@@OPENSSL_1_1_0}\n  [D] 'function int ERR_load_SSL_strings()'    {ERR_load_SSL_strings@@OPENSSL_1_1_0}\n  [D] 'function const char* OPENSSL_cipher_name(const char*)'    {OPENSSL_cipher_name@@OPENSSL_1_1_1}\n  [D] 'function int OPENSSL_init_ssl(uint64_t, const OPENSSL_INIT_SETTINGS*)'    {OPENSSL_init_ssl@@OPENSSL_1_1_0}\n  [D] 'function SSL_SESSION* PEM_read_SSL_SESSION(FILE*, SSL_SESSION**, pem_password_cb*, void*)'    {PEM_read_SSL_SESSION@@OPENSSL_1_1_0}\n  [D] 'function SSL_SESSION* PEM_read_bio_SSL_SESSION(BIO*, SSL_SESSION**, pem_password_cb*, void*)'    {PEM_read_bio_SSL_SESSION@@OPENSSL_1_1_0}\n  [D] 'function int PEM_write_SSL_SESSION(FILE*, SSL_SESSION*)'    {PEM_write_SSL_SESSION@@OPENSSL_1_1_0}\n  [D] 'function int PEM_write_bio_SSL_SESSION(BIO*, SSL_SESSION*)'    {PEM_write_bio_SSL_SESSION@@OPENSSL_1_1_0}\n  [D] 'function int SRP_Calc_A_param(SSL*)'    {SRP_Calc_A_param@@OPENSSL_1_1_0}\n  [D] 'function char* SSL_CIPHER_description(const SSL_CIPHER*, char*, int)'    {SSL_CIPHER_description@@OPENSSL_1_1_0}\n  [D] 'function const SSL_CIPHER* SSL_CIPHER_find(SSL*, const unsigned char*)'    {SSL_CIPHER_find@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CIPHER_get_auth_nid(const SSL_CIPHER*)'    {SSL_CIPHER_get_auth_nid@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CIPHER_get_bits(const SSL_CIPHER*, int*)'    {SSL_CIPHER_get_bits@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CIPHER_get_cipher_nid(const SSL_CIPHER*)'    {SSL_CIPHER_get_cipher_nid@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CIPHER_get_digest_nid(const SSL_CIPHER*)'    {SSL_CIPHER_get_digest_nid@@OPENSSL_1_1_0}\n  [D] 'function const EVP_MD* SSL_CIPHER_get_handshake_digest(const SSL_CIPHER*)'    {SSL_CIPHER_get_handshake_digest@@OPENSSL_1_1_1}\n  [D] 'function uint32_t SSL_CIPHER_get_id(const SSL_CIPHER*)'    {SSL_CIPHER_get_id@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CIPHER_get_kx_nid(const SSL_CIPHER*)'    {SSL_CIPHER_get_kx_nid@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_CIPHER_get_name(const SSL_CIPHER*)'    {SSL_CIPHER_get_name@@OPENSSL_1_1_0}\n  [D] 'function uint16_t SSL_CIPHER_get_protocol_id(const SSL_CIPHER*)'    {SSL_CIPHER_get_protocol_id@@OPENSSL_1_1_1}\n  [D] 'function const char* SSL_CIPHER_get_version(const SSL_CIPHER*)'    {SSL_CIPHER_get_version@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CIPHER_is_aead(const SSL_CIPHER*)'    {SSL_CIPHER_is_aead@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_CIPHER_standard_name(const SSL_CIPHER*)'    {SSL_CIPHER_standard_name@@OPENSSL_1_1_0}\n  [D] 'function int SSL_COMP_add_compression_method(int, COMP_METHOD*)'    {SSL_COMP_add_compression_method@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_COMP_get0_name(const SSL_COMP*)'    {SSL_COMP_get0_name@@OPENSSL_1_1_0d}\n  [D] 'function stack_st_SSL_COMP* SSL_COMP_get_compression_methods()'    {SSL_COMP_get_compression_methods@@OPENSSL_1_1_0}\n  [D] 'function int SSL_COMP_get_id(const SSL_COMP*)'    {SSL_COMP_get_id@@OPENSSL_1_1_0d}\n  [D] 'function const char* SSL_COMP_get_name(const COMP_METHOD*)'    {SSL_COMP_get_name@@OPENSSL_1_1_0}\n  [D] 'function stack_st_SSL_COMP* SSL_COMP_set0_compression_methods(stack_st_SSL_COMP*)'    {SSL_COMP_set0_compression_methods@@OPENSSL_1_1_0}\n  [D] 'function unsigned int SSL_CONF_CTX_clear_flags(SSL_CONF_CTX*, unsigned int)'    {SSL_CONF_CTX_clear_flags@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CONF_CTX_finish(SSL_CONF_CTX*)'    {SSL_CONF_CTX_finish@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CONF_CTX_free(SSL_CONF_CTX*)'    {SSL_CONF_CTX_free@@OPENSSL_1_1_0}\n  [D] 'function SSL_CONF_CTX* SSL_CONF_CTX_new()'    {SSL_CONF_CTX_new@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CONF_CTX_set1_prefix(SSL_CONF_CTX*, const char*)'    {SSL_CONF_CTX_set1_prefix@@OPENSSL_1_1_0}\n  [D] 'function unsigned int SSL_CONF_CTX_set_flags(SSL_CONF_CTX*, unsigned int)'    {SSL_CONF_CTX_set_flags@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CONF_CTX_set_ssl(SSL_CONF_CTX*, SSL*)'    {SSL_CONF_CTX_set_ssl@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CONF_CTX_set_ssl_ctx(SSL_CONF_CTX*, SSL_CTX*)'    {SSL_CONF_CTX_set_ssl_ctx@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CONF_cmd(SSL_CONF_CTX*, const char*, const char*)'    {SSL_CONF_cmd@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CONF_cmd_argv(SSL_CONF_CTX*, int*, char***)'    {SSL_CONF_cmd_argv@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CONF_cmd_value_type(SSL_CONF_CTX*, const char*)'    {SSL_CONF_cmd_value_type@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_SRP_CTX_free(ssl_ctx_st*)'    {SSL_CTX_SRP_CTX_free@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_SRP_CTX_init(ssl_ctx_st*)'    {SSL_CTX_SRP_CTX_init@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_add1_to_CA_list(SSL_CTX*, const X509*)'    {SSL_CTX_add1_to_CA_list@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_add_client_CA(SSL_CTX*, X509*)'    {SSL_CTX_add_client_CA@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_add_client_custom_ext(SSL_CTX*, unsigned int, custom_ext_add_cb, custom_ext_free_cb, void*, custom_ext_parse_cb, void*)'    {SSL_CTX_add_client_custom_ext@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_add_custom_ext(SSL_CTX*, unsigned int, unsigned int, SSL_custom_ext_add_cb_ex, SSL_custom_ext_free_cb_ex, void*, SSL_custom_ext_parse_cb_ex, void*)'    {SSL_CTX_add_custom_ext@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_add_server_custom_ext(SSL_CTX*, unsigned int, custom_ext_add_cb, custom_ext_free_cb, void*, custom_ext_parse_cb, void*)'    {SSL_CTX_add_server_custom_ext@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_add_session(SSL_CTX*, SSL_SESSION*)'    {SSL_CTX_add_session@@OPENSSL_1_1_0}\n  [D] 'function long int SSL_CTX_callback_ctrl(SSL_CTX*, int, void ()*)'    {SSL_CTX_callback_ctrl@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_check_private_key(const SSL_CTX*)'    {SSL_CTX_check_private_key@@OPENSSL_1_1_0}\n  [D] 'function unsigned long int SSL_CTX_clear_options(SSL_CTX*, unsigned long int)'    {SSL_CTX_clear_options@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_config(SSL_CTX*, const char*)'    {SSL_CTX_config@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_ct_is_enabled(const SSL_CTX*)'    {SSL_CTX_ct_is_enabled@@OPENSSL_1_1_0}\n  [D] 'function long int SSL_CTX_ctrl(SSL_CTX*, int, long int, void*)'    {SSL_CTX_ctrl@@OPENSSL_1_1_0}\n  [D] 'function unsigned long int SSL_CTX_dane_clear_flags(SSL_CTX*, unsigned long int)'    {SSL_CTX_dane_clear_flags@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_dane_enable(SSL_CTX*)'    {SSL_CTX_dane_enable@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_dane_mtype_set(SSL_CTX*, const EVP_MD*, uint8_t, uint8_t)'    {SSL_CTX_dane_mtype_set@@OPENSSL_1_1_0}\n  [D] 'function unsigned long int SSL_CTX_dane_set_flags(SSL_CTX*, unsigned long int)'    {SSL_CTX_dane_set_flags@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_enable_ct(SSL_CTX*, int)'    {SSL_CTX_enable_ct@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_flush_sessions(SSL_CTX*, long int)'    {SSL_CTX_flush_sessions@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_free(SSL_CTX*)'    {SSL_CTX_free@@OPENSSL_1_1_0}\n  [D] 'function const stack_st_X509_NAME* SSL_CTX_get0_CA_list(const SSL_CTX*)'    {SSL_CTX_get0_CA_list@@OPENSSL_1_1_1}\n  [D] 'function X509* SSL_CTX_get0_certificate(const SSL_CTX*)'    {SSL_CTX_get0_certificate@@OPENSSL_1_1_0}\n  [D] 'function const CTLOG_STORE* SSL_CTX_get0_ctlog_store(const SSL_CTX*)'    {SSL_CTX_get0_ctlog_store@@OPENSSL_1_1_0}\n  [D] 'function X509_VERIFY_PARAM* SSL_CTX_get0_param(SSL_CTX*)'    {SSL_CTX_get0_param@@OPENSSL_1_1_0}\n  [D] 'function EVP_PKEY* SSL_CTX_get0_privatekey(const SSL_CTX*)'    {SSL_CTX_get0_privatekey@@OPENSSL_1_1_0}\n  [D] 'function void* SSL_CTX_get0_security_ex_data(const SSL_CTX*)'    {SSL_CTX_get0_security_ex_data@@OPENSSL_1_1_0}\n  [D] 'function X509_STORE* SSL_CTX_get_cert_store(const SSL_CTX*)'    {SSL_CTX_get_cert_store@@OPENSSL_1_1_0}\n  [D] 'function stack_st_SSL_CIPHER* SSL_CTX_get_ciphers(const SSL_CTX*)'    {SSL_CTX_get_ciphers@@OPENSSL_1_1_0}\n  [D] 'function stack_st_X509_NAME* SSL_CTX_get_client_CA_list(const SSL_CTX*)'    {SSL_CTX_get_client_CA_list@@OPENSSL_1_1_0}\n  [D] 'function int (SSL*, X509**, EVP_PKEY**)* SSL_CTX_get_client_cert_cb(SSL_CTX*)'    {SSL_CTX_get_client_cert_cb@@OPENSSL_1_1_0}\n  [D] 'function pem_password_cb* SSL_CTX_get_default_passwd_cb(SSL_CTX*)'    {SSL_CTX_get_default_passwd_cb@@OPENSSL_1_1_0}\n  [D] 'function void* SSL_CTX_get_default_passwd_cb_userdata(SSL_CTX*)'    {SSL_CTX_get_default_passwd_cb_userdata@@OPENSSL_1_1_0}\n  [D] 'function void* SSL_CTX_get_ex_data(const SSL_CTX*, int)'    {SSL_CTX_get_ex_data@@OPENSSL_1_1_0}\n  [D] 'function void (const SSL*, int, int)* SSL_CTX_get_info_callback(SSL_CTX*)'    {SSL_CTX_get_info_callback@@OPENSSL_1_1_0}\n  [D] 'function SSL_CTX_keylog_cb_func SSL_CTX_get_keylog_callback(const SSL_CTX*)'    {SSL_CTX_get_keylog_callback@@OPENSSL_1_1_1}\n  [D] 'function uint32_t SSL_CTX_get_max_early_data(const SSL_CTX*)'    {SSL_CTX_get_max_early_data@@OPENSSL_1_1_1}\n  [D] 'function size_t SSL_CTX_get_num_tickets(const SSL_CTX*)'    {SSL_CTX_get_num_tickets@@OPENSSL_1_1_1}\n  [D] 'function unsigned long int SSL_CTX_get_options(const SSL_CTX*)'    {SSL_CTX_get_options@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_get_quiet_shutdown(const SSL_CTX*)'    {SSL_CTX_get_quiet_shutdown@@OPENSSL_1_1_0}\n  [D] 'function void* SSL_CTX_get_record_padding_callback_arg(const SSL_CTX*)'    {SSL_CTX_get_record_padding_callback_arg@@OPENSSL_1_1_1}\n  [D] 'function uint32_t SSL_CTX_get_recv_max_early_data(const SSL_CTX*)'    {SSL_CTX_get_recv_max_early_data@@OPENSSL_1_1_1}\n  [D] 'function int (const SSL*, const SSL_CTX*, int, int, int, void*, void*)* SSL_CTX_get_security_callback(const SSL_CTX*)'    {SSL_CTX_get_security_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_get_security_level(const SSL_CTX*)'    {SSL_CTX_get_security_level@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* SSL_CTX_get_ssl_method(const SSL_CTX*)'    {SSL_CTX_get_ssl_method@@OPENSSL_1_1_0}\n  [D] 'function long int SSL_CTX_get_timeout(const SSL_CTX*)'    {SSL_CTX_get_timeout@@OPENSSL_1_1_0}\n  [D] 'function int (int, X509_STORE_CTX*)* SSL_CTX_get_verify_callback(const SSL_CTX*)'    {SSL_CTX_get_verify_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_get_verify_depth(const SSL_CTX*)'    {SSL_CTX_get_verify_depth@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_get_verify_mode(const SSL_CTX*)'    {SSL_CTX_get_verify_mode@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_has_client_custom_ext(const SSL_CTX*, unsigned int)'    {SSL_CTX_has_client_custom_ext@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_load_verify_locations(SSL_CTX*, const char*, const char*)'    {SSL_CTX_load_verify_locations@@OPENSSL_1_1_0}\n  [D] 'function SSL_CTX* SSL_CTX_new(const SSL_METHOD*)'    {SSL_CTX_new@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_remove_session(SSL_CTX*, SSL_SESSION*)'    {SSL_CTX_remove_session@@OPENSSL_1_1_0}\n  [D] 'function SSL_SESSION* (SSL*, const unsigned char*, int, int*)* SSL_CTX_sess_get_get_cb(SSL_CTX*)'    {SSL_CTX_sess_get_get_cb@@OPENSSL_1_1_0}\n  [D] 'function int (SSL*, SSL_SESSION*)* SSL_CTX_sess_get_new_cb(SSL_CTX*)'    {SSL_CTX_sess_get_new_cb@@OPENSSL_1_1_0}\n  [D] 'function void (SSL_CTX*, SSL_SESSION*)* SSL_CTX_sess_get_remove_cb(SSL_CTX*)'    {SSL_CTX_sess_get_remove_cb@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_sess_set_get_cb(SSL_CTX*, SSL_SESSION* (ssl_st*, const unsigned char*, int, int*)*)'    {SSL_CTX_sess_set_get_cb@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_sess_set_new_cb(SSL_CTX*, int (ssl_st*, SSL_SESSION*)*)'    {SSL_CTX_sess_set_new_cb@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_sess_set_remove_cb(SSL_CTX*, void (SSL_CTX*, SSL_SESSION*)*)'    {SSL_CTX_sess_set_remove_cb@@OPENSSL_1_1_0}\n  [D] 'function lhash_st_SSL_SESSION* SSL_CTX_sessions(SSL_CTX*)'    {SSL_CTX_sessions@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set0_CA_list(SSL_CTX*, stack_st_X509_NAME*)'    {SSL_CTX_set0_CA_list@@OPENSSL_1_1_1}\n  [D] 'function void SSL_CTX_set0_ctlog_store(SSL_CTX*, CTLOG_STORE*)'    {SSL_CTX_set0_ctlog_store@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set0_security_ex_data(SSL_CTX*, void*)'    {SSL_CTX_set0_security_ex_data@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set1_cert_store(SSL_CTX*, X509_STORE*)'    {SSL_CTX_set1_cert_store@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_set1_param(SSL_CTX*, X509_VERIFY_PARAM*)'    {SSL_CTX_set1_param@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_allow_early_data_cb(SSL_CTX*, SSL_allow_early_data_cb_fn, void*)'    {SSL_CTX_set_allow_early_data_cb@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_set_alpn_protos(SSL_CTX*, const unsigned char*, unsigned int)'    {SSL_CTX_set_alpn_protos@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_alpn_select_cb(SSL_CTX*, SSL_CTX_alpn_select_cb_func, void*)'    {SSL_CTX_set_alpn_select_cb@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_block_padding(SSL_CTX*, size_t)'    {SSL_CTX_set_block_padding@@OPENSSL_1_1_1}\n  [D] 'function void SSL_CTX_set_cert_cb(SSL_CTX*, int (SSL*, void*)*, void*)'    {SSL_CTX_set_cert_cb@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_cert_store(SSL_CTX*, X509_STORE*)'    {SSL_CTX_set_cert_store@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_cert_verify_callback(SSL_CTX*, int (X509_STORE_CTX*, void*)*, void*)'    {SSL_CTX_set_cert_verify_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_cipher_list(SSL_CTX*, const char*)'    {SSL_CTX_set_cipher_list@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_ciphersuites(SSL_CTX*, const char*)'    {SSL_CTX_set_ciphersuites@@OPENSSL_1_1_1}\n  [D] 'function void SSL_CTX_set_client_CA_list(SSL_CTX*, stack_st_X509_NAME*)'    {SSL_CTX_set_client_CA_list@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_client_cert_cb(SSL_CTX*, int (SSL*, X509**, EVP_PKEY**)*)'    {SSL_CTX_set_client_cert_cb@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_client_cert_engine(SSL_CTX*, ENGINE*)'    {SSL_CTX_set_client_cert_engine@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_client_hello_cb(SSL_CTX*, SSL_client_hello_cb_fn, void*)'    {SSL_CTX_set_client_hello_cb@@OPENSSL_1_1_1}\n  [D] 'function void SSL_CTX_set_cookie_generate_cb(SSL_CTX*, int (SSL*, unsigned char*, unsigned int*)*)'    {SSL_CTX_set_cookie_generate_cb@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_cookie_verify_cb(SSL_CTX*, int (SSL*, const unsigned char*, unsigned int)*)'    {SSL_CTX_set_cookie_verify_cb@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_ct_validation_callback(SSL_CTX*, ssl_ct_validation_cb, void*)'    {SSL_CTX_set_ct_validation_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_ctlog_list_file(SSL_CTX*, const char*)'    {SSL_CTX_set_ctlog_list_file@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_default_ctlog_list_file(SSL_CTX*)'    {SSL_CTX_set_default_ctlog_list_file@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_default_passwd_cb(SSL_CTX*, pem_password_cb*)'    {SSL_CTX_set_default_passwd_cb@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_default_passwd_cb_userdata(SSL_CTX*, void*)'    {SSL_CTX_set_default_passwd_cb_userdata@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_default_read_buffer_len(SSL_CTX*, size_t)'    {SSL_CTX_set_default_read_buffer_len@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_default_verify_dir(SSL_CTX*)'    {SSL_CTX_set_default_verify_dir@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_default_verify_file(SSL_CTX*)'    {SSL_CTX_set_default_verify_file@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_default_verify_paths(SSL_CTX*)'    {SSL_CTX_set_default_verify_paths@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_ex_data(SSL_CTX*, int, void*)'    {SSL_CTX_set_ex_data@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_generate_session_id(SSL_CTX*, GEN_SESSION_CB)'    {SSL_CTX_set_generate_session_id@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_info_callback(SSL_CTX*, void (const SSL*, int, int)*)'    {SSL_CTX_set_info_callback@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_keylog_callback(SSL_CTX*, SSL_CTX_keylog_cb_func)'    {SSL_CTX_set_keylog_callback@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_set_max_early_data(SSL_CTX*, uint32_t)'    {SSL_CTX_set_max_early_data@@OPENSSL_1_1_1}\n  [D] 'function void SSL_CTX_set_msg_callback(SSL_CTX*, void (int, int, int, void*, typedef size_t, SSL*, void*)*)'    {SSL_CTX_set_msg_callback@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_next_proto_select_cb(SSL_CTX*, SSL_CTX_npn_select_cb_func, void*)'    {SSL_CTX_set_next_proto_select_cb@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_next_protos_advertised_cb(SSL_CTX*, SSL_CTX_npn_advertised_cb_func, void*)'    {SSL_CTX_set_next_protos_advertised_cb@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_not_resumable_session_callback(SSL_CTX*, int (SSL*, int)*)'    {SSL_CTX_set_not_resumable_session_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_num_tickets(SSL_CTX*, size_t)'    {SSL_CTX_set_num_tickets@@OPENSSL_1_1_1}\n  [D] 'function unsigned long int SSL_CTX_set_options(SSL_CTX*, unsigned long int)'    {SSL_CTX_set_options@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_post_handshake_auth(SSL_CTX*, int)'    {SSL_CTX_set_post_handshake_auth@@OPENSSL_1_1_1}\n  [D] 'function void SSL_CTX_set_psk_client_callback(SSL_CTX*, SSL_psk_client_cb_func)'    {SSL_CTX_set_psk_client_callback@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_psk_find_session_callback(SSL_CTX*, SSL_psk_find_session_cb_func)'    {SSL_CTX_set_psk_find_session_callback@@OPENSSL_1_1_1}\n  [D] 'function void SSL_CTX_set_psk_server_callback(SSL_CTX*, SSL_psk_server_cb_func)'    {SSL_CTX_set_psk_server_callback@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_psk_use_session_callback(SSL_CTX*, SSL_psk_use_session_cb_func)'    {SSL_CTX_set_psk_use_session_callback@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_set_purpose(SSL_CTX*, int)'    {SSL_CTX_set_purpose@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_quiet_shutdown(SSL_CTX*, int)'    {SSL_CTX_set_quiet_shutdown@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_record_padding_callback(SSL_CTX*, typedef size_t (SSL*, int, typedef size_t, void*)*)'    {SSL_CTX_set_record_padding_callback@@OPENSSL_1_1_1}\n  [D] 'function void SSL_CTX_set_record_padding_callback_arg(SSL_CTX*, void*)'    {SSL_CTX_set_record_padding_callback_arg@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_set_recv_max_early_data(SSL_CTX*, uint32_t)'    {SSL_CTX_set_recv_max_early_data@@OPENSSL_1_1_1}\n  [D] 'function void SSL_CTX_set_security_callback(SSL_CTX*, int (const SSL*, const SSL_CTX*, int, int, int, void*, void*)*)'    {SSL_CTX_set_security_callback@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_security_level(SSL_CTX*, int)'    {SSL_CTX_set_security_level@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_session_id_context(SSL_CTX*, const unsigned char*, unsigned int)'    {SSL_CTX_set_session_id_context@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_session_ticket_cb(SSL_CTX*, SSL_CTX_generate_session_ticket_fn, SSL_CTX_decrypt_session_ticket_fn, void*)'    {SSL_CTX_set_session_ticket_cb@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_set_srp_cb_arg(SSL_CTX*, void*)'    {SSL_CTX_set_srp_cb_arg@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_srp_client_pwd_callback(SSL_CTX*, char* (SSL*, void*)*)'    {SSL_CTX_set_srp_client_pwd_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_srp_password(SSL_CTX*, char*)'    {SSL_CTX_set_srp_password@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_srp_strength(SSL_CTX*, int)'    {SSL_CTX_set_srp_strength@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_srp_username(SSL_CTX*, char*)'    {SSL_CTX_set_srp_username@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_srp_username_callback(SSL_CTX*, int (SSL*, int*, void*)*)'    {SSL_CTX_set_srp_username_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_srp_verify_param_callback(SSL_CTX*, int (SSL*, void*)*)'    {SSL_CTX_set_srp_verify_param_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_ssl_version(SSL_CTX*, const SSL_METHOD*)'    {SSL_CTX_set_ssl_version@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_stateless_cookie_generate_cb(SSL_CTX*, int (SSL*, unsigned char*, size_t*)*)'    {SSL_CTX_set_stateless_cookie_generate_cb@@OPENSSL_1_1_1}\n  [D] 'function void SSL_CTX_set_stateless_cookie_verify_cb(SSL_CTX*, int (SSL*, const unsigned char*, typedef size_t)*)'    {SSL_CTX_set_stateless_cookie_verify_cb@@OPENSSL_1_1_1}\n  [D] 'function long int SSL_CTX_set_timeout(SSL_CTX*, long int)'    {SSL_CTX_set_timeout@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_tlsext_max_fragment_length(SSL_CTX*, uint8_t)'    {SSL_CTX_set_tlsext_max_fragment_length@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_set_tlsext_use_srtp(SSL_CTX*, const char*)'    {SSL_CTX_set_tlsext_use_srtp@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_tmp_dh_callback(SSL_CTX*, DH* (SSL*, int, int)*)'    {SSL_CTX_set_tmp_dh_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_set_trust(SSL_CTX*, int)'    {SSL_CTX_set_trust@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_verify(SSL_CTX*, int, int (int, X509_STORE_CTX*)*)'    {SSL_CTX_set_verify@@OPENSSL_1_1_0}\n  [D] 'function void SSL_CTX_set_verify_depth(SSL_CTX*, int)'    {SSL_CTX_set_verify_depth@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_up_ref(SSL_CTX*)'    {SSL_CTX_up_ref@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_PrivateKey(SSL_CTX*, EVP_PKEY*)'    {SSL_CTX_use_PrivateKey@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_PrivateKey_ASN1(int, SSL_CTX*, const unsigned char*, long int)'    {SSL_CTX_use_PrivateKey_ASN1@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_PrivateKey_file(SSL_CTX*, const char*, int)'    {SSL_CTX_use_PrivateKey_file@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_RSAPrivateKey(SSL_CTX*, RSA*)'    {SSL_CTX_use_RSAPrivateKey@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_RSAPrivateKey_ASN1(SSL_CTX*, const unsigned char*, long int)'    {SSL_CTX_use_RSAPrivateKey_ASN1@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_RSAPrivateKey_file(SSL_CTX*, const char*, int)'    {SSL_CTX_use_RSAPrivateKey_file@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_cert_and_key(SSL_CTX*, X509*, EVP_PKEY*, stack_st_X509*, int)'    {SSL_CTX_use_cert_and_key@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_use_certificate(SSL_CTX*, X509*)'    {SSL_CTX_use_certificate@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_certificate_ASN1(SSL_CTX*, int, const unsigned char*)'    {SSL_CTX_use_certificate_ASN1@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_certificate_chain_file(SSL_CTX*, const char*)'    {SSL_CTX_use_certificate_chain_file@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_certificate_file(SSL_CTX*, const char*, int)'    {SSL_CTX_use_certificate_file@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_psk_identity_hint(SSL_CTX*, const char*)'    {SSL_CTX_use_psk_identity_hint@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_serverinfo(SSL_CTX*, const unsigned char*, size_t)'    {SSL_CTX_use_serverinfo@@OPENSSL_1_1_0}\n  [D] 'function int SSL_CTX_use_serverinfo_ex(SSL_CTX*, unsigned int, const unsigned char*, size_t)'    {SSL_CTX_use_serverinfo_ex@@OPENSSL_1_1_1}\n  [D] 'function int SSL_CTX_use_serverinfo_file(SSL_CTX*, const char*)'    {SSL_CTX_use_serverinfo_file@@OPENSSL_1_1_0}\n  [D] 'function SSL_SESSION* SSL_SESSION_dup(SSL_SESSION*)'    {SSL_SESSION_dup@@OPENSSL_1_1_1}\n  [D] 'function void SSL_SESSION_free(SSL_SESSION*)'    {SSL_SESSION_free@@OPENSSL_1_1_0}\n  [D] 'function void SSL_SESSION_get0_alpn_selected(const SSL_SESSION*, const unsigned char**, size_t*)'    {SSL_SESSION_get0_alpn_selected@@OPENSSL_1_1_1}\n  [D] 'function const SSL_CIPHER* SSL_SESSION_get0_cipher(const SSL_SESSION*)'    {SSL_SESSION_get0_cipher@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_SESSION_get0_hostname(const SSL_SESSION*)'    {SSL_SESSION_get0_hostname@@OPENSSL_1_1_0}\n  [D] 'function const unsigned char* SSL_SESSION_get0_id_context(const SSL_SESSION*, unsigned int*)'    {SSL_SESSION_get0_id_context@@OPENSSL_1_1_0}\n  [D] 'function X509* SSL_SESSION_get0_peer(SSL_SESSION*)'    {SSL_SESSION_get0_peer@@OPENSSL_1_1_0}\n  [D] 'function void SSL_SESSION_get0_ticket(const SSL_SESSION*, const unsigned char**, size_t*)'    {SSL_SESSION_get0_ticket@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_get0_ticket_appdata(SSL_SESSION*, void**, size_t*)'    {SSL_SESSION_get0_ticket_appdata@@OPENSSL_1_1_1}\n  [D] 'function unsigned int SSL_SESSION_get_compress_id(const SSL_SESSION*)'    {SSL_SESSION_get_compress_id@@OPENSSL_1_1_0}\n  [D] 'function void* SSL_SESSION_get_ex_data(const SSL_SESSION*, int)'    {SSL_SESSION_get_ex_data@@OPENSSL_1_1_0}\n  [D] 'function const unsigned char* SSL_SESSION_get_id(const SSL_SESSION*, unsigned int*)'    {SSL_SESSION_get_id@@OPENSSL_1_1_0}\n  [D] 'function size_t SSL_SESSION_get_master_key(const SSL_SESSION*, unsigned char*, size_t)'    {SSL_SESSION_get_master_key@@OPENSSL_1_1_0}\n  [D] 'function uint32_t SSL_SESSION_get_max_early_data(const SSL_SESSION*)'    {SSL_SESSION_get_max_early_data@@OPENSSL_1_1_1}\n  [D] 'function uint8_t SSL_SESSION_get_max_fragment_length(const SSL_SESSION*)'    {SSL_SESSION_get_max_fragment_length@@OPENSSL_1_1_1}\n  [D] 'function int SSL_SESSION_get_protocol_version(const SSL_SESSION*)'    {SSL_SESSION_get_protocol_version@@OPENSSL_1_1_0}\n  [D] 'function unsigned long int SSL_SESSION_get_ticket_lifetime_hint(const SSL_SESSION*)'    {SSL_SESSION_get_ticket_lifetime_hint@@OPENSSL_1_1_0}\n  [D] 'function long int SSL_SESSION_get_time(const SSL_SESSION*)'    {SSL_SESSION_get_time@@OPENSSL_1_1_0}\n  [D] 'function long int SSL_SESSION_get_timeout(const SSL_SESSION*)'    {SSL_SESSION_get_timeout@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_has_ticket(const SSL_SESSION*)'    {SSL_SESSION_has_ticket@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_is_resumable(const SSL_SESSION*)'    {SSL_SESSION_is_resumable@@OPENSSL_1_1_1}\n  [D] 'function SSL_SESSION* SSL_SESSION_new()'    {SSL_SESSION_new@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_print(BIO*, const SSL_SESSION*)'    {SSL_SESSION_print@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_print_fp(FILE*, const SSL_SESSION*)'    {SSL_SESSION_print_fp@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_print_keylog(BIO*, const SSL_SESSION*)'    {SSL_SESSION_print_keylog@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_set1_alpn_selected(SSL_SESSION*, const unsigned char*, size_t)'    {SSL_SESSION_set1_alpn_selected@@OPENSSL_1_1_1}\n  [D] 'function int SSL_SESSION_set1_hostname(SSL_SESSION*, const char*)'    {SSL_SESSION_set1_hostname@@OPENSSL_1_1_1}\n  [D] 'function int SSL_SESSION_set1_id(SSL_SESSION*, const unsigned char*, unsigned int)'    {SSL_SESSION_set1_id@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_set1_id_context(SSL_SESSION*, const unsigned char*, unsigned int)'    {SSL_SESSION_set1_id_context@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_set1_master_key(SSL_SESSION*, const unsigned char*, size_t)'    {SSL_SESSION_set1_master_key@@OPENSSL_1_1_1}\n  [D] 'function int SSL_SESSION_set1_ticket_appdata(SSL_SESSION*, void*, size_t)'    {SSL_SESSION_set1_ticket_appdata@@OPENSSL_1_1_1}\n  [D] 'function int SSL_SESSION_set_cipher(SSL_SESSION*, const SSL_CIPHER*)'    {SSL_SESSION_set_cipher@@OPENSSL_1_1_1}\n  [D] 'function int SSL_SESSION_set_ex_data(SSL_SESSION*, int, void*)'    {SSL_SESSION_set_ex_data@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_set_max_early_data(SSL_SESSION*, uint32_t)'    {SSL_SESSION_set_max_early_data@@OPENSSL_1_1_1}\n  [D] 'function int SSL_SESSION_set_protocol_version(SSL_SESSION*, int)'    {SSL_SESSION_set_protocol_version@@OPENSSL_1_1_1}\n  [D] 'function long int SSL_SESSION_set_time(SSL_SESSION*, long int)'    {SSL_SESSION_set_time@@OPENSSL_1_1_0}\n  [D] 'function long int SSL_SESSION_set_timeout(SSL_SESSION*, long int)'    {SSL_SESSION_set_timeout@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SESSION_up_ref(SSL_SESSION*)'    {SSL_SESSION_up_ref@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SRP_CTX_free(ssl_st*)'    {SSL_SRP_CTX_free@@OPENSSL_1_1_0}\n  [D] 'function int SSL_SRP_CTX_init(ssl_st*)'    {SSL_SRP_CTX_init@@OPENSSL_1_1_0}\n  [D] 'function int SSL_accept(SSL*)'    {SSL_accept@@OPENSSL_1_1_0}\n  [D] 'function int SSL_add1_host(SSL*, const char*)'    {SSL_add1_host@@OPENSSL_1_1_0}\n  [D] 'function int SSL_add1_to_CA_list(SSL*, const X509*)'    {SSL_add1_to_CA_list@@OPENSSL_1_1_1}\n  [D] 'function int SSL_add_client_CA(SSL*, X509*)'    {SSL_add_client_CA@@OPENSSL_1_1_0}\n  [D] 'function int SSL_add_dir_cert_subjects_to_stack(stack_st_X509_NAME*, const char*)'    {SSL_add_dir_cert_subjects_to_stack@@OPENSSL_1_1_0}\n  [D] 'function int SSL_add_file_cert_subjects_to_stack(stack_st_X509_NAME*, const char*)'    {SSL_add_file_cert_subjects_to_stack@@OPENSSL_1_1_0}\n  [D] 'function void SSL_add_ssl_module()'    {SSL_add_ssl_module@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_alert_desc_string(int)'    {SSL_alert_desc_string@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_alert_desc_string_long(int)'    {SSL_alert_desc_string_long@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_alert_type_string(int)'    {SSL_alert_type_string@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_alert_type_string_long(int)'    {SSL_alert_type_string_long@@OPENSSL_1_1_0}\n  [D] 'function int SSL_alloc_buffers(SSL*)'    {SSL_alloc_buffers@@OPENSSL_1_1_1}\n  [D] 'function int SSL_bytes_to_cipher_list(SSL*, const unsigned char*, size_t, int, stack_st_SSL_CIPHER**, stack_st_SSL_CIPHER**)'    {SSL_bytes_to_cipher_list@@OPENSSL_1_1_1}\n  [D] 'function long int SSL_callback_ctrl(SSL*, int, void ()*)'    {SSL_callback_ctrl@@OPENSSL_1_1_0}\n  [D] 'function void SSL_certs_clear(SSL*)'    {SSL_certs_clear@@OPENSSL_1_1_0}\n  [D] 'function int SSL_check_chain(SSL*, X509*, EVP_PKEY*, stack_st_X509*)'    {SSL_check_chain@@OPENSSL_1_1_0}\n  [D] 'function int SSL_check_private_key(const SSL*)'    {SSL_check_private_key@@OPENSSL_1_1_0}\n  [D] 'function int SSL_clear(SSL*)'    {SSL_clear@@OPENSSL_1_1_0}\n  [D] 'function unsigned long int SSL_clear_options(SSL*, unsigned long int)'    {SSL_clear_options@@OPENSSL_1_1_0}\n  [D] 'function size_t SSL_client_hello_get0_ciphers(SSL*, const unsigned char**)'    {SSL_client_hello_get0_ciphers@@OPENSSL_1_1_1}\n  [D] 'function size_t SSL_client_hello_get0_compression_methods(SSL*, const unsigned char**)'    {SSL_client_hello_get0_compression_methods@@OPENSSL_1_1_1}\n  [D] 'function int SSL_client_hello_get0_ext(SSL*, unsigned int, const unsigned char**, size_t*)'    {SSL_client_hello_get0_ext@@OPENSSL_1_1_1}\n  [D] 'function unsigned int SSL_client_hello_get0_legacy_version(SSL*)'    {SSL_client_hello_get0_legacy_version@@OPENSSL_1_1_1}\n  [D] 'function size_t SSL_client_hello_get0_random(SSL*, const unsigned char**)'    {SSL_client_hello_get0_random@@OPENSSL_1_1_1}\n  [D] 'function size_t SSL_client_hello_get0_session_id(SSL*, const unsigned char**)'    {SSL_client_hello_get0_session_id@@OPENSSL_1_1_1}\n  [D] 'function int SSL_client_hello_get1_extensions_present(SSL*, int**, size_t*)'    {SSL_client_hello_get1_extensions_present@@OPENSSL_1_1_1}\n  [D] 'function int SSL_client_hello_isv2(SSL*)'    {SSL_client_hello_isv2@@OPENSSL_1_1_1}\n  [D] 'function int SSL_client_version(const SSL*)'    {SSL_client_version@@OPENSSL_1_1_0}\n  [D] 'function int SSL_config(SSL*, const char*)'    {SSL_config@@OPENSSL_1_1_0}\n  [D] 'function int SSL_connect(SSL*)'    {SSL_connect@@OPENSSL_1_1_0}\n  [D] 'function int SSL_copy_session_id(SSL*, const SSL*)'    {SSL_copy_session_id@@OPENSSL_1_1_0}\n  [D] 'function int SSL_ct_is_enabled(const SSL*)'    {SSL_ct_is_enabled@@OPENSSL_1_1_0}\n  [D] 'function long int SSL_ctrl(SSL*, int, long int, void*)'    {SSL_ctrl@@OPENSSL_1_1_0}\n  [D] 'function unsigned long int SSL_dane_clear_flags(SSL*, unsigned long int)'    {SSL_dane_clear_flags@@OPENSSL_1_1_0}\n  [D] 'function int SSL_dane_enable(SSL*, const char*)'    {SSL_dane_enable@@OPENSSL_1_1_0}\n  [D] 'function unsigned long int SSL_dane_set_flags(SSL*, unsigned long int)'    {SSL_dane_set_flags@@OPENSSL_1_1_0}\n  [D] 'function int SSL_dane_tlsa_add(SSL*, uint8_t, uint8_t, uint8_t, const unsigned char*, size_t)'    {SSL_dane_tlsa_add@@OPENSSL_1_1_0}\n  [D] 'function int SSL_do_handshake(SSL*)'    {SSL_do_handshake@@OPENSSL_1_1_0}\n  [D] 'function SSL* SSL_dup(SSL*)'    {SSL_dup@@OPENSSL_1_1_0}\n  [D] 'function stack_st_X509_NAME* SSL_dup_CA_list(const stack_st_X509_NAME*)'    {SSL_dup_CA_list@@OPENSSL_1_1_0}\n  [D] 'function int SSL_enable_ct(SSL*, int)'    {SSL_enable_ct@@OPENSSL_1_1_0}\n  [D] 'function int SSL_export_keying_material(SSL*, unsigned char*, size_t, const char*, size_t, const unsigned char*, size_t, int)'    {SSL_export_keying_material@@OPENSSL_1_1_0}\n  [D] 'function int SSL_export_keying_material_early(SSL*, unsigned char*, size_t, const char*, size_t, const unsigned char*, size_t)'    {SSL_export_keying_material_early@@OPENSSL_1_1_1}\n  [D] 'function int SSL_extension_supported(unsigned int)'    {SSL_extension_supported@@OPENSSL_1_1_0}\n  [D] 'function void SSL_free(SSL*)'    {SSL_free@@OPENSSL_1_1_0}\n  [D] 'function int SSL_free_buffers(SSL*)'    {SSL_free_buffers@@OPENSSL_1_1_1}\n  [D] 'function const stack_st_X509_NAME* SSL_get0_CA_list(const SSL*)'    {SSL_get0_CA_list@@OPENSSL_1_1_1}\n  [D] 'function void SSL_get0_alpn_selected(const SSL*, const unsigned char**, unsigned int*)'    {SSL_get0_alpn_selected@@OPENSSL_1_1_0}\n  [D] 'function SSL_DANE* SSL_get0_dane(SSL*)'    {SSL_get0_dane@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get0_dane_authority(SSL*, X509**, EVP_PKEY**)'    {SSL_get0_dane_authority@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get0_dane_tlsa(SSL*, uint8_t*, uint8_t*, uint8_t*, const unsigned char**, size_t*)'    {SSL_get0_dane_tlsa@@OPENSSL_1_1_0}\n  [D] 'function void SSL_get0_next_proto_negotiated(const SSL*, const unsigned char**, unsigned int*)'    {SSL_get0_next_proto_negotiated@@OPENSSL_1_1_0}\n  [D] 'function X509_VERIFY_PARAM* SSL_get0_param(SSL*)'    {SSL_get0_param@@OPENSSL_1_1_0}\n  [D] 'function const stack_st_X509_NAME* SSL_get0_peer_CA_list(const SSL*)'    {SSL_get0_peer_CA_list@@OPENSSL_1_1_1}\n  [D] 'function const stack_st_SCT* SSL_get0_peer_scts(SSL*)'    {SSL_get0_peer_scts@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_get0_peername(SSL*)'    {SSL_get0_peername@@OPENSSL_1_1_0}\n  [D] 'function void* SSL_get0_security_ex_data(const SSL*)'    {SSL_get0_security_ex_data@@OPENSSL_1_1_0}\n  [D] 'function stack_st_X509* SSL_get0_verified_chain(const SSL*)'    {SSL_get0_verified_chain@@OPENSSL_1_1_0}\n  [D] 'function SSL_SESSION* SSL_get1_session(SSL*)'    {SSL_get1_session@@OPENSSL_1_1_0}\n  [D] 'function stack_st_SSL_CIPHER* SSL_get1_supported_ciphers(SSL*)'    {SSL_get1_supported_ciphers@@OPENSSL_1_1_0}\n  [D] 'function SSL_CTX* SSL_get_SSL_CTX(const SSL*)'    {SSL_get_SSL_CTX@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_all_async_fds(SSL*, int*, size_t*)'    {SSL_get_all_async_fds@@OPENSSL_1_1_0}\n  [D] 'function X509* SSL_get_certificate(const SSL*)'    {SSL_get_certificate@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_changed_async_fds(SSL*, int*, size_t*, int*, size_t*)'    {SSL_get_changed_async_fds@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_get_cipher_list(const SSL*, int)'    {SSL_get_cipher_list@@OPENSSL_1_1_0}\n  [D] 'function stack_st_SSL_CIPHER* SSL_get_ciphers(const SSL*)'    {SSL_get_ciphers@@OPENSSL_1_1_0}\n  [D] 'function stack_st_X509_NAME* SSL_get_client_CA_list(const SSL*)'    {SSL_get_client_CA_list@@OPENSSL_1_1_0}\n  [D] 'function stack_st_SSL_CIPHER* SSL_get_client_ciphers(const SSL*)'    {SSL_get_client_ciphers@@OPENSSL_1_1_0}\n  [D] 'function size_t SSL_get_client_random(const SSL*, unsigned char*, size_t)'    {SSL_get_client_random@@OPENSSL_1_1_0}\n  [D] 'function const SSL_CIPHER* SSL_get_current_cipher(const SSL*)'    {SSL_get_current_cipher@@OPENSSL_1_1_0}\n  [D] 'function const COMP_METHOD* SSL_get_current_compression(const SSL*)'    {SSL_get_current_compression@@OPENSSL_1_1_0}\n  [D] 'function const COMP_METHOD* SSL_get_current_expansion(const SSL*)'    {SSL_get_current_expansion@@OPENSSL_1_1_0}\n  [D] 'function pem_password_cb* SSL_get_default_passwd_cb(SSL*)'    {SSL_get_default_passwd_cb@@OPENSSL_1_1_0}\n  [D] 'function void* SSL_get_default_passwd_cb_userdata(SSL*)'    {SSL_get_default_passwd_cb_userdata@@OPENSSL_1_1_0}\n  [D] 'function long int SSL_get_default_timeout(const SSL*)'    {SSL_get_default_timeout@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_early_data_status(const SSL*)'    {SSL_get_early_data_status@@OPENSSL_1_1_1}\n  [D] 'function int SSL_get_error(const SSL*, int)'    {SSL_get_error@@OPENSSL_1_1_0}\n  [D] 'function void* SSL_get_ex_data(const SSL*, int)'    {SSL_get_ex_data@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_ex_data_X509_STORE_CTX_idx()'    {SSL_get_ex_data_X509_STORE_CTX_idx@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_fd(const SSL*)'    {SSL_get_fd@@OPENSSL_1_1_0}\n  [D] 'function size_t SSL_get_finished(const SSL*, void*, size_t)'    {SSL_get_finished@@OPENSSL_1_1_0}\n  [D] 'function void (const SSL*, int, int)* SSL_get_info_callback(const SSL*)'    {SSL_get_info_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_key_update_type(const SSL*)'    {SSL_get_key_update_type@@OPENSSL_1_1_1}\n  [D] 'function uint32_t SSL_get_max_early_data(const SSL*)'    {SSL_get_max_early_data@@OPENSSL_1_1_1}\n  [D] 'function size_t SSL_get_num_tickets(const SSL*)'    {SSL_get_num_tickets@@OPENSSL_1_1_1}\n  [D] 'function unsigned long int SSL_get_options(const SSL*)'    {SSL_get_options@@OPENSSL_1_1_0}\n  [D] 'function stack_st_X509* SSL_get_peer_cert_chain(const SSL*)'    {SSL_get_peer_cert_chain@@OPENSSL_1_1_0}\n  [D] 'function X509* SSL_get_peer_certificate(const SSL*)'    {SSL_get_peer_certificate@@OPENSSL_1_1_0}\n  [D] 'function size_t SSL_get_peer_finished(const SSL*, void*, size_t)'    {SSL_get_peer_finished@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_peer_signature_type_nid(const SSL*, int*)'    {SSL_get_peer_signature_type_nid@@OPENSSL_1_1_1}\n  [D] 'function const SSL_CIPHER* SSL_get_pending_cipher(const SSL*)'    {SSL_get_pending_cipher@@OPENSSL_1_1_1}\n  [D] 'function EVP_PKEY* SSL_get_privatekey(const SSL*)'    {SSL_get_privatekey@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_get_psk_identity(const SSL*)'    {SSL_get_psk_identity@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_get_psk_identity_hint(const SSL*)'    {SSL_get_psk_identity_hint@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_quiet_shutdown(const SSL*)'    {SSL_get_quiet_shutdown@@OPENSSL_1_1_0}\n  [D] 'function BIO* SSL_get_rbio(const SSL*)'    {SSL_get_rbio@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_read_ahead(const SSL*)'    {SSL_get_read_ahead@@OPENSSL_1_1_0}\n  [D] 'function void* SSL_get_record_padding_callback_arg(const SSL*)'    {SSL_get_record_padding_callback_arg@@OPENSSL_1_1_1}\n  [D] 'function uint32_t SSL_get_recv_max_early_data(const SSL*)'    {SSL_get_recv_max_early_data@@OPENSSL_1_1_1}\n  [D] 'function int SSL_get_rfd(const SSL*)'    {SSL_get_rfd@@OPENSSL_1_1_0}\n  [D] 'function int (const SSL*, const SSL_CTX*, int, int, int, void*, void*)* SSL_get_security_callback(const SSL*)'    {SSL_get_security_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_security_level(const SSL*)'    {SSL_get_security_level@@OPENSSL_1_1_0}\n  [D] 'function SRTP_PROTECTION_PROFILE* SSL_get_selected_srtp_profile(SSL*)'    {SSL_get_selected_srtp_profile@@OPENSSL_1_1_0}\n  [D] 'function size_t SSL_get_server_random(const SSL*, unsigned char*, size_t)'    {SSL_get_server_random@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_get_servername(const SSL*, const int)'    {SSL_get_servername@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_servername_type(const SSL*)'    {SSL_get_servername_type@@OPENSSL_1_1_0}\n  [D] 'function SSL_SESSION* SSL_get_session(const SSL*)'    {SSL_get_session@@OPENSSL_1_1_0}\n  [D] 'function char* SSL_get_shared_ciphers(const SSL*, char*, int)'    {SSL_get_shared_ciphers@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_shared_sigalgs(SSL*, int, int*, int*, int*, unsigned char*, unsigned char*)'    {SSL_get_shared_sigalgs@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_shutdown(const SSL*)'    {SSL_get_shutdown@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_sigalgs(SSL*, int, int*, int*, int*, unsigned char*, unsigned char*)'    {SSL_get_sigalgs@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_signature_type_nid(const SSL*, int*)'    {SSL_get_signature_type_nid@@OPENSSL_1_1_1a}\n  [D] 'function BIGNUM* SSL_get_srp_N(SSL*)'    {SSL_get_srp_N@@OPENSSL_1_1_0}\n  [D] 'function BIGNUM* SSL_get_srp_g(SSL*)'    {SSL_get_srp_g@@OPENSSL_1_1_0}\n  [D] 'function char* SSL_get_srp_userinfo(SSL*)'    {SSL_get_srp_userinfo@@OPENSSL_1_1_0}\n  [D] 'function char* SSL_get_srp_username(SSL*)'    {SSL_get_srp_username@@OPENSSL_1_1_0}\n  [D] 'function stack_st_SRTP_PROTECTION_PROFILE* SSL_get_srtp_profiles(SSL*)'    {SSL_get_srtp_profiles@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* SSL_get_ssl_method(const SSL*)'    {SSL_get_ssl_method@@OPENSSL_1_1_0}\n  [D] 'function OSSL_HANDSHAKE_STATE SSL_get_state(const SSL*)'    {SSL_get_state@@OPENSSL_1_1_0}\n  [D] 'function int (int, X509_STORE_CTX*)* SSL_get_verify_callback(const SSL*)'    {SSL_get_verify_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_verify_depth(const SSL*)'    {SSL_get_verify_depth@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_verify_mode(const SSL*)'    {SSL_get_verify_mode@@OPENSSL_1_1_0}\n  [D] 'function long int SSL_get_verify_result(const SSL*)'    {SSL_get_verify_result@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_get_version(const SSL*)'    {SSL_get_version@@OPENSSL_1_1_0}\n  [D] 'function BIO* SSL_get_wbio(const SSL*)'    {SSL_get_wbio@@OPENSSL_1_1_0}\n  [D] 'function int SSL_get_wfd(const SSL*)'    {SSL_get_wfd@@OPENSSL_1_1_0}\n  [D] 'function int SSL_has_matching_session_id(const SSL*, const unsigned char*, unsigned int)'    {SSL_has_matching_session_id@@OPENSSL_1_1_0}\n  [D] 'function int SSL_has_pending(const SSL*)'    {SSL_has_pending@@OPENSSL_1_1_0}\n  [D] 'function int SSL_in_before(const SSL*)'    {SSL_in_before@@OPENSSL_1_1_0}\n  [D] 'function int SSL_in_init(const SSL*)'    {SSL_in_init@@OPENSSL_1_1_0}\n  [D] 'function int SSL_is_dtls(const SSL*)'    {SSL_is_dtls@@OPENSSL_1_1_0}\n  [D] 'function int SSL_is_init_finished(const SSL*)'    {SSL_is_init_finished@@OPENSSL_1_1_0}\n  [D] 'function int SSL_is_server(const SSL*)'    {SSL_is_server@@OPENSSL_1_1_0}\n  [D] 'function int SSL_key_update(SSL*, int)'    {SSL_key_update@@OPENSSL_1_1_1}\n  [D] 'function stack_st_X509_NAME* SSL_load_client_CA_file(const char*)'    {SSL_load_client_CA_file@@OPENSSL_1_1_0}\n  [D] 'function SSL* SSL_new(SSL_CTX*)'    {SSL_new@@OPENSSL_1_1_0}\n  [D] 'function int SSL_peek(SSL*, void*, int)'    {SSL_peek@@OPENSSL_1_1_0}\n  [D] 'function int SSL_peek_ex(SSL*, void*, size_t, size_t*)'    {SSL_peek_ex@@OPENSSL_1_1_1}\n  [D] 'function int SSL_pending(const SSL*)'    {SSL_pending@@OPENSSL_1_1_0}\n  [D] 'function int SSL_read(SSL*, void*, int)'    {SSL_read@@OPENSSL_1_1_0}\n  [D] 'function int SSL_read_early_data(SSL*, void*, size_t, size_t*)'    {SSL_read_early_data@@OPENSSL_1_1_1}\n  [D] 'function int SSL_read_ex(SSL*, void*, size_t, size_t*)'    {SSL_read_ex@@OPENSSL_1_1_1}\n  [D] 'function int SSL_renegotiate(SSL*)'    {SSL_renegotiate@@OPENSSL_1_1_0}\n  [D] 'function int SSL_renegotiate_abbreviated(SSL*)'    {SSL_renegotiate_abbreviated@@OPENSSL_1_1_0}\n  [D] 'function int SSL_renegotiate_pending(const SSL*)'    {SSL_renegotiate_pending@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_rstate_string(const SSL*)'    {SSL_rstate_string@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_rstate_string_long(const SSL*)'    {SSL_rstate_string_long@@OPENSSL_1_1_0}\n  [D] 'function int SSL_select_next_proto(unsigned char**, unsigned char*, const unsigned char*, unsigned int, const unsigned char*, unsigned int)'    {SSL_select_next_proto@@OPENSSL_1_1_0}\n  [D] 'function int SSL_session_reused(const SSL*)'    {SSL_session_reused@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set0_CA_list(SSL*, stack_st_X509_NAME*)'    {SSL_set0_CA_list@@OPENSSL_1_1_1}\n  [D] 'function void SSL_set0_rbio(SSL*, BIO*)'    {SSL_set0_rbio@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set0_security_ex_data(SSL*, void*)'    {SSL_set0_security_ex_data@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set0_wbio(SSL*, BIO*)'    {SSL_set0_wbio@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set1_host(SSL*, const char*)'    {SSL_set1_host@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set1_param(SSL*, X509_VERIFY_PARAM*)'    {SSL_set1_param@@OPENSSL_1_1_0}\n  [D] 'function SSL_CTX* SSL_set_SSL_CTX(SSL*, SSL_CTX*)'    {SSL_set_SSL_CTX@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_accept_state(SSL*)'    {SSL_set_accept_state@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_allow_early_data_cb(SSL*, SSL_allow_early_data_cb_fn, void*)'    {SSL_set_allow_early_data_cb@@OPENSSL_1_1_1}\n  [D] 'function int SSL_set_alpn_protos(SSL*, const unsigned char*, unsigned int)'    {SSL_set_alpn_protos@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_bio(SSL*, BIO*, BIO*)'    {SSL_set_bio@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_block_padding(SSL*, size_t)'    {SSL_set_block_padding@@OPENSSL_1_1_1}\n  [D] 'function void SSL_set_cert_cb(SSL*, int (SSL*, void*)*, void*)'    {SSL_set_cert_cb@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_cipher_list(SSL*, const char*)'    {SSL_set_cipher_list@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_ciphersuites(SSL*, const char*)'    {SSL_set_ciphersuites@@OPENSSL_1_1_1}\n  [D] 'function void SSL_set_client_CA_list(SSL*, stack_st_X509_NAME*)'    {SSL_set_client_CA_list@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_connect_state(SSL*)'    {SSL_set_connect_state@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_ct_validation_callback(SSL*, ssl_ct_validation_cb, void*)'    {SSL_set_ct_validation_callback@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_debug(SSL*, int)'    {SSL_set_debug@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_default_passwd_cb(SSL*, pem_password_cb*)'    {SSL_set_default_passwd_cb@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_default_passwd_cb_userdata(SSL*, void*)'    {SSL_set_default_passwd_cb_userdata@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_default_read_buffer_len(SSL*, size_t)'    {SSL_set_default_read_buffer_len@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_ex_data(SSL*, int, void*)'    {SSL_set_ex_data@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_fd(SSL*, int)'    {SSL_set_fd@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_generate_session_id(SSL*, GEN_SESSION_CB)'    {SSL_set_generate_session_id@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_hostflags(SSL*, unsigned int)'    {SSL_set_hostflags@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_info_callback(SSL*, void (const SSL*, int, int)*)'    {SSL_set_info_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_max_early_data(SSL*, uint32_t)'    {SSL_set_max_early_data@@OPENSSL_1_1_1}\n  [D] 'function void SSL_set_msg_callback(SSL*, void (int, int, int, void*, typedef size_t, SSL*, void*)*)'    {SSL_set_msg_callback@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_not_resumable_session_callback(SSL*, int (SSL*, int)*)'    {SSL_set_not_resumable_session_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_num_tickets(SSL*, size_t)'    {SSL_set_num_tickets@@OPENSSL_1_1_1}\n  [D] 'function unsigned long int SSL_set_options(SSL*, unsigned long int)'    {SSL_set_options@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_post_handshake_auth(SSL*, int)'    {SSL_set_post_handshake_auth@@OPENSSL_1_1_1}\n  [D] 'function void SSL_set_psk_client_callback(SSL*, SSL_psk_client_cb_func)'    {SSL_set_psk_client_callback@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_psk_find_session_callback(SSL*, SSL_psk_find_session_cb_func)'    {SSL_set_psk_find_session_callback@@OPENSSL_1_1_1}\n  [D] 'function void SSL_set_psk_server_callback(SSL*, SSL_psk_server_cb_func)'    {SSL_set_psk_server_callback@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_psk_use_session_callback(SSL*, SSL_psk_use_session_cb_func)'    {SSL_set_psk_use_session_callback@@OPENSSL_1_1_1}\n  [D] 'function int SSL_set_purpose(SSL*, int)'    {SSL_set_purpose@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_quiet_shutdown(SSL*, int)'    {SSL_set_quiet_shutdown@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_read_ahead(SSL*, int)'    {SSL_set_read_ahead@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_record_padding_callback(SSL*, typedef size_t (SSL*, int, typedef size_t, void*)*)'    {SSL_set_record_padding_callback@@OPENSSL_1_1_1}\n  [D] 'function void SSL_set_record_padding_callback_arg(SSL*, void*)'    {SSL_set_record_padding_callback_arg@@OPENSSL_1_1_1}\n  [D] 'function int SSL_set_recv_max_early_data(SSL*, uint32_t)'    {SSL_set_recv_max_early_data@@OPENSSL_1_1_1}\n  [D] 'function int SSL_set_rfd(SSL*, int)'    {SSL_set_rfd@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_security_callback(SSL*, int (const SSL*, const SSL_CTX*, int, int, int, void*, void*)*)'    {SSL_set_security_callback@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_security_level(SSL*, int)'    {SSL_set_security_level@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_session(SSL*, SSL_SESSION*)'    {SSL_set_session@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_session_id_context(SSL*, const unsigned char*, unsigned int)'    {SSL_set_session_id_context@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_session_secret_cb(SSL*, tls_session_secret_cb_fn, void*)'    {SSL_set_session_secret_cb@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_session_ticket_ext(SSL*, void*, int)'    {SSL_set_session_ticket_ext@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_session_ticket_ext_cb(SSL*, tls_session_ticket_ext_cb_fn, void*)'    {SSL_set_session_ticket_ext_cb@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_shutdown(SSL*, int)'    {SSL_set_shutdown@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_srp_server_param(SSL*, const BIGNUM*, const BIGNUM*, BIGNUM*, BIGNUM*, char*)'    {SSL_set_srp_server_param@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_srp_server_param_pw(SSL*, const char*, const char*, const char*)'    {SSL_set_srp_server_param_pw@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_ssl_method(SSL*, const SSL_METHOD*)'    {SSL_set_ssl_method@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_tlsext_max_fragment_length(SSL*, uint8_t)'    {SSL_set_tlsext_max_fragment_length@@OPENSSL_1_1_1}\n  [D] 'function int SSL_set_tlsext_use_srtp(SSL*, const char*)'    {SSL_set_tlsext_use_srtp@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_tmp_dh_callback(SSL*, DH* (SSL*, int, int)*)'    {SSL_set_tmp_dh_callback@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_trust(SSL*, int)'    {SSL_set_trust@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_verify(SSL*, int, int (int, X509_STORE_CTX*)*)'    {SSL_set_verify@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_verify_depth(SSL*, int)'    {SSL_set_verify_depth@@OPENSSL_1_1_0}\n  [D] 'function void SSL_set_verify_result(SSL*, long int)'    {SSL_set_verify_result@@OPENSSL_1_1_0}\n  [D] 'function int SSL_set_wfd(SSL*, int)'    {SSL_set_wfd@@OPENSSL_1_1_0}\n  [D] 'function int SSL_shutdown(SSL*)'    {SSL_shutdown@@OPENSSL_1_1_0}\n  [D] 'function int SSL_srp_server_param_with_username(SSL*, int*)'    {SSL_srp_server_param_with_username@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_state_string(const SSL*)'    {SSL_state_string@@OPENSSL_1_1_0}\n  [D] 'function const char* SSL_state_string_long(const SSL*)'    {SSL_state_string_long@@OPENSSL_1_1_0}\n  [D] 'function int SSL_stateless(SSL*)'    {SSL_stateless@@OPENSSL_1_1_1}\n  [D] 'function int SSL_up_ref(SSL*)'    {SSL_up_ref@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_PrivateKey(SSL*, EVP_PKEY*)'    {SSL_use_PrivateKey@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_PrivateKey_ASN1(int, SSL*, const unsigned char*, long int)'    {SSL_use_PrivateKey_ASN1@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_PrivateKey_file(SSL*, const char*, int)'    {SSL_use_PrivateKey_file@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_RSAPrivateKey(SSL*, RSA*)'    {SSL_use_RSAPrivateKey@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_RSAPrivateKey_ASN1(SSL*, const unsigned char*, long int)'    {SSL_use_RSAPrivateKey_ASN1@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_RSAPrivateKey_file(SSL*, const char*, int)'    {SSL_use_RSAPrivateKey_file@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_cert_and_key(SSL*, X509*, EVP_PKEY*, stack_st_X509*, int)'    {SSL_use_cert_and_key@@OPENSSL_1_1_1}\n  [D] 'function int SSL_use_certificate(SSL*, X509*)'    {SSL_use_certificate@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_certificate_ASN1(SSL*, const unsigned char*, int)'    {SSL_use_certificate_ASN1@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_certificate_chain_file(SSL*, const char*)'    {SSL_use_certificate_chain_file@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_certificate_file(SSL*, const char*, int)'    {SSL_use_certificate_file@@OPENSSL_1_1_0}\n  [D] 'function int SSL_use_psk_identity_hint(SSL*, const char*)'    {SSL_use_psk_identity_hint@@OPENSSL_1_1_0}\n  [D] 'function int SSL_verify_client_post_handshake(SSL*)'    {SSL_verify_client_post_handshake@@OPENSSL_1_1_1}\n  [D] 'function int SSL_version(const SSL*)'    {SSL_version@@OPENSSL_1_1_0}\n  [D] 'function int SSL_waiting_for_async(SSL*)'    {SSL_waiting_for_async@@OPENSSL_1_1_0}\n  [D] 'function int SSL_want(const SSL*)'    {SSL_want@@OPENSSL_1_1_0}\n  [D] 'function int SSL_write(SSL*, void*, int)'    {SSL_write@@OPENSSL_1_1_0}\n  [D] 'function int SSL_write_early_data(SSL*, void*, size_t, size_t*)'    {SSL_write_early_data@@OPENSSL_1_1_1}\n  [D] 'function int SSL_write_ex(SSL*, void*, size_t, size_t*)'    {SSL_write_ex@@OPENSSL_1_1_1}\n  [D] 'function const SSL_METHOD* SSLv3_client_method()'    {SSLv3_client_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* SSLv3_method()'    {SSLv3_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* SSLv3_server_method()'    {SSLv3_server_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLS_client_method()'    {TLS_client_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLS_method()'    {TLS_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLS_server_method()'    {TLS_server_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLSv1_1_client_method()'    {TLSv1_1_client_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLSv1_1_method()'    {TLSv1_1_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLSv1_1_server_method()'    {TLSv1_1_server_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLSv1_2_client_method()'    {TLSv1_2_client_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLSv1_2_method()'    {TLSv1_2_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLSv1_2_server_method()'    {TLSv1_2_server_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLSv1_client_method()'    {TLSv1_client_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLSv1_method()'    {TLSv1_method@@OPENSSL_1_1_0}\n  [D] 'function const SSL_METHOD* TLSv1_server_method()'    {TLSv1_server_method@@OPENSSL_1_1_0}\n  [D] 'function SSL_SESSION* d2i_SSL_SESSION(SSL_SESSION**, const unsigned char**, long int)'    {d2i_SSL_SESSION@@OPENSSL_1_1_0}\n  [D] 'function int i2d_SSL_SESSION(SSL_SESSION*, unsigned char**)'    {i2d_SSL_SESSION@@OPENSSL_1_1_0}\n\n23 Added functions:\n\n  [A] 'function const char* OSSL_default_cipher_list()'    {OSSL_default_cipher_list@@OPENSSL_3.0.0}\n  [A] 'function const char* OSSL_default_ciphersuites()'    {OSSL_default_ciphersuites@@OPENSSL_3.0.0}\n  [A] 'function int SSL_CTX_load_verify_dir(SSL_CTX*, const char*)'    {SSL_CTX_load_verify_dir@@OPENSSL_3.0.0}\n  [A] 'function int SSL_CTX_load_verify_file(SSL_CTX*, const char*)'    {SSL_CTX_load_verify_file@@OPENSSL_3.0.0}\n  [A] 'function int SSL_CTX_load_verify_store(SSL_CTX*, const char*)'    {SSL_CTX_load_verify_store@@OPENSSL_3.0.0}\n  [A] 'function SSL_CTX* SSL_CTX_new_ex(OSSL_LIB_CTX*, const char*, const SSL_METHOD*)'    {SSL_CTX_new_ex@@OPENSSL_3.0.0}\n  [A] 'function int SSL_CTX_set0_tmp_dh_pkey(SSL_CTX*, EVP_PKEY*)'    {SSL_CTX_set0_tmp_dh_pkey@@OPENSSL_3.0.0}\n  [A] 'function int SSL_CTX_set_async_callback(SSL_CTX*, SSL_async_callback_fn)'    {SSL_CTX_set_async_callback@@OPENSSL_3.0.0}\n  [A] 'function int SSL_CTX_set_async_callback_arg(SSL_CTX*, void*)'    {SSL_CTX_set_async_callback_arg@@OPENSSL_3.0.0}\n  [A] 'function int SSL_CTX_set_default_verify_store(SSL_CTX*)'    {SSL_CTX_set_default_verify_store@@OPENSSL_3.0.0}\n  [A] 'function int SSL_CTX_set_tlsext_ticket_key_evp_cb(SSL_CTX*, int (SSL*, unsigned char*, unsigned char*, EVP_CIPHER_CTX*, EVP_MAC_CTX*, int)*)'    {SSL_CTX_set_tlsext_ticket_key_evp_cb@@OPENSSL_3.0.0}\n  [A] 'function int SSL_add_store_cert_subjects_to_stack(stack_st_X509_NAME*, const char*)'    {SSL_add_store_cert_subjects_to_stack@@OPENSSL_3.0.0}\n  [A] 'function X509* SSL_get0_peer_certificate(const SSL*)'    {SSL_get0_peer_certificate@@OPENSSL_3.0.0}\n  [A] 'function X509* SSL_get1_peer_certificate(const SSL*)'    {SSL_get1_peer_certificate@@OPENSSL_3.0.0}\n  [A] 'function int SSL_get_async_status(SSL*, int*)'    {SSL_get_async_status@@OPENSSL_3.0.0}\n  [A] 'function const char* SSL_group_to_name(SSL*, int)'    {SSL_group_to_name@@OPENSSL_3.0.0}\n  [A] 'function stack_st_X509_NAME* SSL_load_client_CA_file_ex(const char*, OSSL_LIB_CTX*, const char*)'    {SSL_load_client_CA_file_ex@@OPENSSL_3.0.0}\n  [A] 'function int SSL_new_session_ticket(SSL*)'    {SSL_new_session_ticket@@OPENSSL_3.0.0}\n  [A] 'function ssize_t SSL_sendfile(SSL*, int, off_t, size_t, int)'    {SSL_sendfile@@OPENSSL_3.0.0}\n  [A] 'function int SSL_set0_tmp_dh_pkey(SSL*, EVP_PKEY*)'    {SSL_set0_tmp_dh_pkey@@OPENSSL_3.0.0}\n  [A] 'function int SSL_set_async_callback(SSL*, SSL_async_callback_fn)'    {SSL_set_async_callback@@OPENSSL_3.0.0}\n  [A] 'function int SSL_set_async_callback_arg(SSL*, void*)'    {SSL_set_async_callback_arg@@OPENSSL_3.0.0}\n  [A] 'function void SSL_trace(int, int, int, void*, size_t, SSL*, void*)'    {SSL_trace@@OPENSSL_3.0.0}\n\n",
                    "return_code": 12,
                    "seconds": 0.42099928855895996,
                    "command": "/usr/local/bin/abidiff --debug-info-dir1 /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib/debug --debug-info-dir2 /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib/debug  /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libssl.so.1.1.1n /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libssl.so.3.0.5",
                    "spliced_lib": "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libssl.so.3.0.5",
                    "original_lib": "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libssl.so.1.1.1n",
                    "prediction": false,
                    "splice_type": "different_lib"
                }
            ],
            "abi-laboratory": [
                {
                    "message": "old: /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libssl.so.1.1.1n\nnew: /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libssl.so.3.0.5\nreport: /tmp/cache/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libssl.so.1.1.1n-abi-laboratory-libssl-so-1-1-1n-libssl-so-3-0-5.html\n",
                    "return_code": 139,
                    "seconds": 0.19970321655273438,
                    "command": "/bin/bash /usr/bin/run_abi_laboratory.sh /__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libssl.so.1.1.1n /__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libssl.so.3.0.5 libssl-so-1-1-1n-libssl-so-3-0-5 /tmp/cache/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libssl.so.1.1.1n-abi-laboratory-libssl-so-1-1-1n-libssl-so-3-0-5.html",
                    "spliced_lib": "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libssl.so.3.0.5",
                    "original_lib": "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libssl.so.1.1.1n",
                    "prediction": false,
                    "splice_type": "different_lib"
                }
            ]
        },
        "stats": {
            "sizes_bytes": {
                "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libssl.so.1.1.1n": 653568,
                "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libssl.so.3.0.5": 677488
            }
        },
        "experiment": "usr/lib64/libssl-fedora-libs-34-fedora-libs-37",
        "result": "diff-libraries-present",
        "success": true,
        "splice": "/__w/splice-experiment-runs/splice-experiment-runs/second/usr/lib64/libssl.so.3.0.5",
        "package": "/__w/splice-experiment-runs/splice-experiment-runs/first/usr/lib64/libssl.so.1.1.1n",
        "different_libs": true
    }
]